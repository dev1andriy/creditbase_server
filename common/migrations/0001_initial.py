# Generated by Django 2.1.4 on 2019-08-23 11:58

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AccountId', models.AutoField(primary_key=True, serialize=False)),
                ('AccountIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('AccountIdOther1', models.CharField(blank=True, max_length=50, null=True)),
                ('AccountIdOther2', models.CharField(blank=True, max_length=50, null=True)),
                ('AccountTitle', models.CharField(blank=True, max_length=100, null=True)),
                ('OriginationDate', models.DateTimeField(blank=True, null=True)),
                ('LimitId', models.CharField(blank=True, max_length=50, null=True)),
                ('LimitAmount', models.FloatField(blank=True, null=True)),
                ('BalanceBook', models.FloatField(blank=True, null=True)),
                ('BalanceAvailable', models.FloatField(blank=True, null=True)),
                ('BalanceDate', models.DateTimeField(blank=True, null=True)),
                ('LastTransactionDate', models.DateTimeField(blank=True, null=True)),
                ('PostingRestrictionType', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EditHostValuesFlag', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Account',
                'db_table': 'Account',
            },
        ),
        migrations.CreateModel(
            name='AccountCategory',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AccountCategoryId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountcategory_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountcategory_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AccountCategory',
                'verbose_name_plural': 'AccountCategory',
                'db_table': 'AccountCategory',
            },
        ),
        migrations.CreateModel(
            name='AccountClass',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AccountClassId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountclass_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountclass_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AccountClass',
                'verbose_name_plural': 'AccountClass',
                'db_table': 'AccountClass',
            },
        ),
        migrations.CreateModel(
            name='AccountOfficer',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AccountOfficerId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountofficer_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountofficer_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AccountOfficer',
                'verbose_name_plural': 'AccountOfficer',
                'db_table': 'AccountOfficer',
            },
        ),
        migrations.CreateModel(
            name='AccountRelatedParty',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AccountRelatedPartyId', models.AutoField(primary_key=True, serialize=False)),
                ('RelatedPartyName', models.CharField(blank=True, max_length=100, null=True)),
                ('Comment', models.TextField(blank=True, null=True)),
                ('StartDate', models.DateTimeField(blank=True, null=True)),
                ('EndDate', models.DateTimeField(blank=True, null=True)),
                ('EditHostValuesFlag', models.BooleanField(default=True)),
                ('AccountId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Account')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountrelatedparty_inserted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AccountRelatedParty',
                'verbose_name_plural': 'AccountRelatedParty',
                'db_table': 'AccountRelatedParty',
            },
        ),
        migrations.CreateModel(
            name='AccountStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AccountStatusId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AccountStatus',
                'verbose_name_plural': 'AccountStatus',
                'db_table': 'AccountStatus',
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AccountTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('AccountCategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.AccountCategory')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accounttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AccountType',
                'verbose_name_plural': 'AccountType',
                'db_table': 'AccountType',
            },
        ),
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ActionTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actiontype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actiontype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ActionType',
                'verbose_name_plural': 'ActionType',
                'db_table': 'ActionType',
            },
        ),
        migrations.CreateModel(
            name='ActivityQueue',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ActivityQueueId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activityqueue_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activityqueue_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ActivityQueue',
                'verbose_name_plural': 'ActivityQueue',
                'db_table': 'ActivityQueue',
            },
        ),
        migrations.CreateModel(
            name='ActivitySource',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ActivitySourceId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activitysource_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activitysource_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ActivitySource',
                'verbose_name_plural': 'ActivitySource',
                'db_table': 'ActivitySource',
            },
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ActivityTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activitytype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activitytype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ActivityType',
                'verbose_name_plural': 'ActivityType',
                'db_table': 'ActivityType',
            },
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AddressTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresstype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresstype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AddressType',
                'verbose_name_plural': 'AddressType',
                'db_table': 'AddressType',
            },
        ),
        migrations.CreateModel(
            name='AlertConvertOption',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertConvertOptionId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertconvertoption_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertconvertoption_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AlertConvertOption',
                'verbose_name_plural': 'AlertConvertOption',
                'db_table': 'AlertConvertOption',
            },
        ),
        migrations.CreateModel(
            name='AlertDocumentStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertDocumentStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertdocumentstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertdocumentstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AlertDocumentStatus',
                'verbose_name_plural': 'AlertDocumentStatus',
                'db_table': 'AlertDocumentStatus',
            },
        ),
        migrations.CreateModel(
            name='AlertEmailOption',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertEmailOptionId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertemailoption_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertemailoption_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AlertEmailOption',
                'verbose_name_plural': 'AlertEmailOption',
                'db_table': 'AlertEmailOption',
            },
        ),
        migrations.CreateModel(
            name='AlertSeverity',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertSeverityId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertseverity_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertseverity_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AlertSeverity',
                'verbose_name_plural': 'AlertSeverity',
                'db_table': 'AlertSeverity',
            },
        ),
        migrations.CreateModel(
            name='AlertSource',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertSourceId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertsource_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertsource_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AlertSource',
                'verbose_name_plural': 'AlertSource',
                'db_table': 'AlertSource',
            },
        ),
        migrations.CreateModel(
            name='AlertStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AlertStatus',
                'verbose_name_plural': 'AlertStatus',
                'db_table': 'AlertStatus',
            },
        ),
        migrations.CreateModel(
            name='AlertSubType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertSubTypeId', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'AlertSubType',
                'verbose_name_plural': 'AlertSubType',
                'db_table': 'AlertSubType',
            },
        ),
        migrations.CreateModel(
            name='AlertType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AlertTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AlertType',
                'verbose_name_plural': 'AlertType',
                'db_table': 'AlertType',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationId', models.IntegerField(primary_key=True, serialize=False)),
                ('Description1', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Application',
                'db_table': 'Application',
            },
        ),
        migrations.CreateModel(
            name='ApplicationPriority',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationPriorityId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationpriority_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationpriority_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ApplicationPriority',
                'verbose_name_plural': 'ApplicationPriority',
                'db_table': 'ApplicationPriority',
            },
        ),
        migrations.CreateModel(
            name='ApplicationSource',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationSourceId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationsource_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationsource_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ApplicationSource',
                'verbose_name_plural': 'ApplicationSource',
                'db_table': 'ApplicationSource',
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ApplicationStatus',
                'verbose_name_plural': 'ApplicationStatus',
                'db_table': 'ApplicationStatus',
            },
        ),
        migrations.CreateModel(
            name='ApplicationTemplate',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationTemplateId', models.AutoField(primary_key=True, serialize=False)),
                ('ProfileTypes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApplicationTypes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApplicationPurposes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProductTypesApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CollateralTypesApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationtemplate_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationtemplate_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ApplicationTemplate',
                'verbose_name_plural': 'ApplicationTemplate',
                'db_table': 'ApplicationTemplate',
            },
        ),
        migrations.CreateModel(
            name='ApplicationTemplateSection',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationTemplateSectionId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationtemplatesection_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationtemplatesection_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ApplicationTemplateSection',
                'verbose_name_plural': 'ApplicationTemplateSection',
                'db_table': 'ApplicationTemplateSection',
            },
        ),
        migrations.CreateModel(
            name='ApplicationType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicationtype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ApplicationType',
                'verbose_name_plural': 'ApplicationType',
                'db_table': 'ApplicationType',
            },
        ),
        migrations.CreateModel(
            name='ArrangementActionType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ArrangementActionTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementactiontype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementactiontype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ArrangementActionType',
                'verbose_name_plural': 'ArrangementActionType',
                'db_table': 'ArrangementActionType',
            },
        ),
        migrations.CreateModel(
            name='ArrangementCategory',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ArrangementCategoryId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementcategory_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementcategory_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ArrangementCategory',
                'verbose_name_plural': 'ArrangementCategory',
                'db_table': 'ArrangementCategory',
            },
        ),
        migrations.CreateModel(
            name='ArrangementClass',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ArrangementClassId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementclass_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementclass_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ArrangementClass',
                'verbose_name_plural': 'ArrangementClass',
                'db_table': 'ArrangementClass',
            },
        ),
        migrations.CreateModel(
            name='ArrangementParam',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ArrangementParamId', models.AutoField(primary_key=True, serialize=False)),
                ('FieldType', models.IntegerField(blank=True, null=True)),
                ('Name1', models.CharField(blank=True, max_length=50, null=True)),
                ('Name2', models.CharField(blank=True, max_length=50, null=True)),
                ('Name3', models.CharField(blank=True, max_length=50, null=True)),
                ('Name4', models.CharField(blank=True, max_length=50, null=True)),
                ('Description', models.CharField(blank=True, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, max_length=50, null=True)),
                ('Mandatory', models.BooleanField(default=False)),
                ('ActiveFlag', models.BooleanField(default=True)),
                ('AllowNullFlag', models.BooleanField(default=True)),
                ('DataSourceType1', models.CharField(blank=True, max_length=100, null=True)),
                ('DataSourceType2', models.CharField(blank=True, max_length=100, null=True)),
                ('DataSourceType3', models.CharField(blank=True, max_length=100, null=True)),
                ('URL1', models.CharField(blank=True, max_length=200, null=True)),
                ('URL2', models.CharField(blank=True, max_length=200, null=True)),
                ('URL3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Query1', models.CharField(blank=True, max_length=100, null=True)),
                ('Query2', models.CharField(blank=True, max_length=100, null=True)),
                ('Query3', models.CharField(blank=True, max_length=100, null=True)),
                ('TotalType', models.CharField(blank=True, max_length=100, null=True)),
                ('IdHost', models.CharField(blank=True, max_length=20, null=True)),
                ('ArrangementCategory', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementCategory')),
            ],
            options={
                'verbose_name': 'ArrangementParam',
                'verbose_name_plural': 'ArrangementParam',
                'db_table': 'ArrangementParam',
            },
        ),
        migrations.CreateModel(
            name='ArrangementParamCategory',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ArrangementParamCategoryId', models.AutoField(primary_key=True, serialize=False)),
                ('ArrangementCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementCategory')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementparamcategory_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementparamcategory_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ArrangementParamCategory',
                'verbose_name_plural': 'ArrangementParamCategory',
                'db_table': 'ArrangementParamCategory',
            },
        ),
        migrations.CreateModel(
            name='ArrangementParamMatrix',
            fields=[
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ArrangementParamMatrixId', models.AutoField(primary_key=True, serialize=False)),
                ('ValueLimits', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DisplayFlag', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ModifyFlag', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PrintFlag', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ArrangementParamId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementParam')),
            ],
            options={
                'verbose_name': 'ArrangementParamMatrix',
                'verbose_name_plural': 'ArrangementParamMatrix',
                'db_table': 'ArrangementParamMatrix',
            },
        ),
        migrations.CreateModel(
            name='ArrangementType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ArrangementTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('ParentFlag', models.BooleanField(default=False)),
                ('ExposureDriver', models.IntegerField(blank=True, null=True)),
                ('ArrangementCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementCategory')),
                ('ArrangementClass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementClass')),
                ('ArrangementTypeParent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementtype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ArrangementType',
                'verbose_name_plural': 'ArrangementType',
                'db_table': 'ArrangementType',
            },
        ),
        migrations.CreateModel(
            name='AssetClassification',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AssetClassificationId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assetclassification_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assetclassification_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AssetClassification',
                'verbose_name_plural': 'AssetClassification',
                'db_table': 'AssetClassification',
            },
        ),
        migrations.CreateModel(
            name='AuthorityLevel',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AuthorityLevelId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authoritylevel_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authoritylevel_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AuthorityLevel',
                'verbose_name_plural': 'AuthorityLevel',
                'db_table': 'AuthorityLevel',
            },
        ),
        migrations.CreateModel(
            name='BaseParty',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('BasePartyId', models.AutoField(primary_key=True, serialize=False)),
                ('BasePartyHostId', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('BasePartyName', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('LegalEntityType', models.IntegerField(blank=True, default=None, null=True)),
                ('PrimaryLegalIdType', models.IntegerField(blank=True, default=None, null=True)),
                ('PrimaryLegalId', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('RelationshipStartDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('PrimaryRM', models.IntegerField(blank=True, default=None, null=True)),
                ('EditHostValuesFlag', models.IntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'BaseParty',
                'verbose_name_plural': 'BaseParty',
                'db_table': 'BaseParty',
            },
        ),
        migrations.CreateModel(
            name='BasePartyAddress',
            fields=[
                ('EditHostValuesFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('BasePartyAddressId', models.AutoField(primary_key=True, serialize=False)),
                ('Level1Location', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Level2Location', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Level3Location', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('PostCode', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Street1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Street2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Street3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('AddressManual', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('AddressHost', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('AddressFinal', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('AddressType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AddressType')),
            ],
            options={
                'verbose_name': 'BasePartyAddress',
                'verbose_name_plural': 'BasePartyAddress',
                'db_table': 'BasePartyAddress',
            },
        ),
        migrations.CreateModel(
            name='BasePartyEmail',
            fields=[
                ('EditHostValuesFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('BasePartyEmailId', models.AutoField(primary_key=True, serialize=False)),
                ('EmailManual', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('EmailHost', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('EmailFinal', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('AddressType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AddressType')),
            ],
            options={
                'verbose_name': 'BasePartyEmail',
                'verbose_name_plural': 'BasePartyEmail',
                'db_table': 'BasePartyEmail',
            },
        ),
        migrations.CreateModel(
            name='BasePartyFinancialsSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RecentStatementDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('StatementCount', models.IntegerField(blank=True, default=None, null=True)),
                ('StatementHistory', models.IntegerField(blank=True, default=None, null=True)),
                ('TotalRevenue', models.FloatField(blank=True, default=None, null=True)),
                ('GrossProfit', models.FloatField(blank=True, default=None, null=True)),
                ('TotalOperatingExpenses', models.FloatField(blank=True, default=None, null=True)),
                ('EBITDA', models.FloatField(blank=True, default=None, null=True)),
                ('RetainedEarnings', models.FloatField(blank=True, default=None, null=True)),
                ('TotalAssets', models.FloatField(blank=True, default=None, null=True)),
                ('TotalCurrentAssets', models.FloatField(blank=True, default=None, null=True)),
                ('TotalNonCurrentAssets', models.FloatField(blank=True, default=None, null=True)),
                ('TotalCurrentLiabilities', models.FloatField(blank=True, default=None, null=True)),
                ('TotalNonCurrentLiabilities', models.FloatField(blank=True, default=None, null=True)),
                ('TotalEquity', models.FloatField(blank=True, default=None, null=True)),
                ('DSCR', models.FloatField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'BasePartyFinancialsSummary',
                'verbose_name_plural': 'BasePartyFinancialsSummary',
                'db_table': 'BasePartyFinancialsSummary',
            },
        ),
        migrations.CreateModel(
            name='BasePartyIdentifier',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('BasePartyIdentifierId', models.AutoField(primary_key=True, serialize=False)),
                ('Identifier', models.IntegerField(blank=True, default=None, null=True)),
                ('StartDate', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'BasePartyIdentifier',
                'verbose_name_plural': 'BasePartyIdentifier',
                'db_table': 'BasePartyIdentifier',
            },
        ),
        migrations.CreateModel(
            name='BasePartyTelephone',
            fields=[
                ('EditHostValuesFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('BasePartyTelephoneId', models.AutoField(primary_key=True, serialize=False)),
                ('TelephonePart1', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('TelephonePart2', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('TelephonePart3', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('TelephonePart4', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('TelFormattedManual', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('TelFormattedHost', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('TelFormattedFinal', models.CharField(blank=True, default=None, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'BasePartyTelephone',
                'verbose_name_plural': 'BasePartyTelephone',
                'db_table': 'BasePartyTelephone',
            },
        ),
        migrations.CreateModel(
            name='BasePartyType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('BasePartyTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartytype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartytype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BasePartyType',
                'verbose_name_plural': 'BasePartyType',
                'db_table': 'BasePartyType',
            },
        ),
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('BusinessUnitId', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'BusinessUnit',
                'verbose_name_plural': 'BusinessUnit',
                'db_table': 'BusinessUnit',
            },
        ),
        migrations.CreateModel(
            name='BuyerPower',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('BuyerPowerId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buyerpower_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buyerpower_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BuyerPower',
                'verbose_name_plural': 'BuyerPower',
                'db_table': 'BuyerPower',
            },
        ),
        migrations.CreateModel(
            name='ChangeType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ChangeTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('Description', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='changetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='changetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ChangeType',
                'verbose_name_plural': 'ChangeType',
                'db_table': 'ChangeType',
            },
        ),
        migrations.CreateModel(
            name='ChecklistAnswer',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AnswerId', models.AutoField(primary_key=True, serialize=False)),
                ('ResponseAutoId', models.IntegerField(blank=True, default=None, null=True)),
                ('ResponseAutoScore', models.FloatField(blank=True, default=None, null=True)),
                ('ResponseAutoDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Response1Score', models.FloatField(blank=True, default=None, null=True)),
                ('Response1Date', models.DateTimeField(blank=True, default=None, null=True)),
                ('Response2Score', models.FloatField(blank=True, default=None, null=True)),
                ('Response2Date', models.DateTimeField(blank=True, default=None, null=True)),
                ('Response3Score', models.FloatField(blank=True, default=None, null=True)),
                ('Response3Date', models.DateTimeField(blank=True, default=None, null=True)),
                ('Response4Score', models.FloatField(blank=True, default=None, null=True)),
                ('Response4Date', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'ChecklistAnswer',
                'verbose_name_plural': 'ChecklistAnswer',
                'db_table': 'ChecklistAnswer',
            },
        ),
        migrations.CreateModel(
            name='ChecklistComment',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CommentId', models.AutoField(primary_key=True, serialize=False)),
                ('Comment', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'ChecklistComment',
                'verbose_name_plural': 'ChecklistComment',
                'db_table': 'ChecklistComment',
            },
        ),
        migrations.CreateModel(
            name='ChecklistDocument',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('FileType', models.CharField(blank=True, max_length=100, null=True)),
                ('FileSize', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'ChecklistDocument',
                'verbose_name_plural': 'ChecklistDocument',
                'db_table': 'ChecklistDocument',
            },
        ),
        migrations.CreateModel(
            name='ChecklistQuestion',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('QuestionId', models.AutoField(primary_key=True, serialize=False)),
                ('QuestionIdHost', models.CharField(blank=True, max_length=20, null=True)),
                ('ParentSectionFlag', models.BooleanField(default=False)),
                ('Description', models.CharField(blank=True, max_length=300, null=True)),
                ('FormulaName', models.IntegerField(blank=True, null=True)),
                ('OrderingRank', models.IntegerField(blank=True, null=True)),
                ('Weight', models.FloatField(blank=True, null=True)),
                ('AutoAttributeFlag', models.IntegerField(blank=True, null=True)),
                ('AutoAttributeId', models.IntegerField(blank=True, null=True)),
                ('HelpTextFlag', models.IntegerField(blank=True, null=True)),
                ('HelpText', models.TextField(blank=True, null=True)),
                ('CommentsFlag', models.IntegerField(blank=True, null=True)),
                ('DisplayScoreFlag', models.IntegerField(blank=True, null=True)),
                ('DisplayWeightFlag', models.IntegerField(blank=True, null=True)),
                ('WeightFormulaId', models.IntegerField(blank=True, null=True)),
                ('ScoreFormulaId', models.IntegerField(blank=True, null=True)),
                ('RandomizeFlag', models.IntegerField(blank=True, null=True)),
                ('DocumentsFlag', models.BooleanField(default=False)),
                ('DocumentType', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistquestion_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistquestion_updated_by', to=settings.AUTH_USER_MODEL)),
                ('ParentSectionId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistQuestion')),
            ],
            options={
                'verbose_name': 'ChecklistQuestion',
                'verbose_name_plural': 'ChecklistQuestion',
                'db_table': 'ChecklistQuestion',
            },
        ),
        migrations.CreateModel(
            name='ChecklistResponse',
            fields=[
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ResponseId', models.AutoField(primary_key=True, serialize=False)),
                ('ResponseIdHost', models.IntegerField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Points', models.FloatField(blank=True, default=None, null=True)),
                ('FollowupQuestionId', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistresponse_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistresponse_updated_by', to=settings.AUTH_USER_MODEL)),
                ('QuestionId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistQuestion')),
            ],
            options={
                'verbose_name': 'ChecklistResponse',
                'verbose_name_plural': 'ChecklistResponse',
                'db_table': 'ChecklistResponse',
            },
        ),
        migrations.CreateModel(
            name='ChecklistResult',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ChecklistResultId', models.AutoField(primary_key=True, serialize=False)),
                ('Role', models.CharField(blank=True, default='Temp role', max_length=100, null=True)),
                ('Score', models.FloatField(blank=True, default=None, null=True)),
                ('FinalizedFlag', models.BooleanField(default=False)),
                ('Comment', models.TextField(blank=True, default=None, null=True)),
                ('TEMP_FIELD', models.IntegerField()),
            ],
            options={
                'verbose_name': 'ChecklistResult',
                'verbose_name_plural': 'ChecklistResult',
                'db_table': 'ChecklistResult',
            },
        ),
        migrations.CreateModel(
            name='ChecklistStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ChecklistStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checkliststatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checkliststatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ChecklistStatus',
                'verbose_name_plural': 'ChecklistStatus',
                'db_table': 'ChecklistStatus',
            },
        ),
        migrations.CreateModel(
            name='ChecklistTab',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ChecklistTabId', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Title', models.CharField(blank=True, max_length=100, null=True)),
                ('TabId', models.IntegerField(blank=True, null=True)),
                ('TabLevel', models.IntegerField(blank=True, default=1, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttab_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttab_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ChecklistTab',
                'verbose_name_plural': 'ChecklistTab',
                'db_table': 'ChecklistTab',
            },
        ),
        migrations.CreateModel(
            name='ChecklistTemplate',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('TemplateId', models.AutoField(primary_key=True, serialize=False)),
                ('ModuleId', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Description', models.CharField(blank=True, max_length=300, null=True)),
                ('TemplateVersion', models.IntegerField(blank=True, null=True)),
                ('ProfileTypes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApplicationTypes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApplicationPurposes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProductTypesApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CollateralTypesApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Response1Flag', models.BooleanField(blank=True, default=True, null=True)),
                ('Response2Flag', models.BooleanField(blank=True, default=True, null=True)),
                ('Response3Flag', models.BooleanField(blank=True, default=True, null=True)),
                ('Response4Flag', models.BooleanField(blank=True, default=True, null=True)),
                ('Response1Role', models.CharField(blank=True, max_length=100, null=True)),
                ('Response2Role', models.CharField(blank=True, max_length=100, null=True)),
                ('Response3Role', models.CharField(blank=True, max_length=100, null=True)),
                ('Response4Role', models.CharField(blank=True, max_length=100, null=True)),
                ('AutoLabel', models.CharField(blank=True, max_length=10, null=True)),
                ('Response1Label', models.CharField(blank=True, max_length=10, null=True)),
                ('Response2Label', models.CharField(blank=True, max_length=10, null=True)),
                ('Response3Label', models.CharField(blank=True, max_length=10, null=True)),
                ('Response4Label', models.CharField(blank=True, max_length=10, null=True)),
                ('ScorePass', models.FloatField(blank=True, null=True)),
                ('ScoreFail', models.FloatField(blank=True, null=True)),
                ('ScorePending', models.FloatField(blank=True, null=True)),
                ('ChecklistTabId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistTab')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttemplate_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttemplate_updated_by', to=settings.AUTH_USER_MODEL)),
                ('Status', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistStatus')),
            ],
            options={
                'verbose_name': 'ChecklistTemplate',
                'verbose_name_plural': 'ChecklistTemplate',
                'db_table': 'ChecklistTemplate',
            },
        ),
        migrations.CreateModel(
            name='ChecklistTemplateStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ChecklistTemplateStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttemplatestatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttemplatestatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ChecklistTemplateStatus',
                'verbose_name_plural': 'ChecklistTemplateStatus',
                'db_table': 'ChecklistTemplateStatus',
            },
        ),
        migrations.CreateModel(
            name='ChecklistTemplateType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ChecklistTemplateTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttemplatetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklisttemplatetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ChecklistTemplateType',
                'verbose_name_plural': 'ChecklistTemplateType',
                'db_table': 'ChecklistTemplateType',
            },
        ),
        migrations.CreateModel(
            name='Collateral',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CollateralId', models.AutoField(primary_key=True, serialize=False)),
                ('DataView', models.IntegerField(blank=True, null=True)),
                ('CollateralIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('CollateralIdOther1', models.CharField(blank=True, max_length=50, null=True)),
                ('CollateralIdOther2', models.CharField(blank=True, max_length=50, null=True)),
                ('ArrangementTypeHost', models.CharField(blank=True, max_length=20, null=True)),
                ('ActionableFlag', models.BooleanField(default=False)),
                ('Description1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Description2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Currency', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NominalFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CurrentFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXDealRef', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRateDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExpiryDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NextReviewDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ForcedSaleValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MarketValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DiscountedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RecoveryValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExistingCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProposedCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProposedValue', models.FloatField(blank=True, null=True)),
                ('PriorLiens', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExistingExposure', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DiscountFactor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LossRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceType1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceProvider1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceExpiryDate1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceAmount1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsurancePolicyRef1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceProvider2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceExpiryDate2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceAmount2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsurancePolicyRef2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceProvider3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceExpiryDate3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceAmount3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsurancePolicyRef3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationDone', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationBasis', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationProvider', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuerName', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationExpiryDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackingInstalled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackerId', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackerName', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackingInstallDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ArrangementClass', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementClass')),
                ('ArrangementType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType')),
            ],
            options={
                'verbose_name': 'Collateral',
                'verbose_name_plural': 'Collateral',
                'db_table': 'Collateral',
            },
        ),
        migrations.CreateModel(
            name='CollateralArchived',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CollateralId', models.AutoField(primary_key=True, serialize=False)),
                ('ArchiveVersion', models.IntegerField(blank=True, null=True)),
                ('ArchiveStatus', models.IntegerField(blank=True, null=True)),
                ('DataView', models.IntegerField(blank=True, null=True)),
                ('CollateralIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('CollateralIdOther1', models.CharField(blank=True, max_length=50, null=True)),
                ('CollateralIdOther2', models.CharField(blank=True, max_length=50, null=True)),
                ('ArrangementTypeHost', models.CharField(blank=True, max_length=20, null=True)),
                ('ActionableFlag', models.BooleanField(default=False)),
                ('Description1', models.CharField(blank=True, max_length=100, null=True)),
                ('Description2', models.CharField(blank=True, max_length=100, null=True)),
                ('Description3', models.CharField(blank=True, max_length=100, null=True)),
                ('Description4', models.CharField(blank=True, max_length=100, null=True)),
                ('Currency', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NominalFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CurrentFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXDealRef', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRateDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExpiryDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NextReviewDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ForcedSaleValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MarketValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DiscountedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RecoveryValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExistingCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProposedCharge', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProposedValue', models.FloatField(blank=True, null=True)),
                ('PriorLiens', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExistingExposure', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DiscountFactor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LossRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceType1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceProvider1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceExpiryDate1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceAmount1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsurancePolicyRef1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceProvider2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceExpiryDate2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceAmount2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsurancePolicyRef2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceProvider3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceExpiryDate3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsuranceAmount3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsurancePolicyRef3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationDone', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationBasis', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationProvider', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuerName', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ValuationExpiryDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackingInstalled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackerId', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackerName', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TrackingInstallDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ActiveVersion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Collateral')),
                ('ArrangementClass', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementClass')),
                ('ArrangementType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType')),
            ],
            options={
                'verbose_name': 'CollateralArchived',
                'verbose_name_plural': 'CollateralArchived',
                'db_table': 'CollateralArchived',
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CommunicationId', models.AutoField(primary_key=True, serialize=False)),
                ('CommunicationSourceId', models.IntegerField(blank=True, default=None, null=True)),
                ('StaffSenderId', models.IntegerField(blank=True, default=None, null=True)),
                ('AddressFrom', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('AddressTo', models.TextField(blank=True, default=None, null=True)),
                ('AddressCC', models.TextField(blank=True, default=None, null=True)),
                ('AddressBCC', models.TextField(blank=True, default=None, null=True)),
                ('TelFormatted', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Subject', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Body', models.TextField(blank=True, default=None, null=True)),
                ('DueDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('DraftDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('QueuedDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('SentDate', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'Communication',
                'verbose_name_plural': 'Communication',
                'db_table': 'Communication',
            },
        ),
        migrations.CreateModel(
            name='CommunicationAttachment',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('AttachmentId', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('FileName', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('FileURL', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('FileSize', models.FloatField(blank=True, default=None, null=True)),
                ('FileObject', models.TextField(blank=True, default=None, null=True)),
                ('CommunicationId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Communication')),
            ],
            options={
                'verbose_name': 'CommunicationAttachment',
                'verbose_name_plural': 'CommunicationAttachment',
                'db_table': 'CommunicationAttachment',
            },
        ),
        migrations.CreateModel(
            name='CommunicationDistribution',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DistributionId', models.AutoField(primary_key=True, serialize=False)),
                ('AddressTo', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('RecipientName', models.IntegerField(blank=True, default=None, null=True)),
                ('CommunicationId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Communication')),
            ],
            options={
                'verbose_name': 'CommunicationDistribution',
                'verbose_name_plural': 'CommunicationDistribution',
                'db_table': 'CommunicationDistribution',
            },
        ),
        migrations.CreateModel(
            name='CommunicationQueue',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CommunicationQueueId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationqueue_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationqueue_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CommunicationQueue',
                'verbose_name_plural': 'CommunicationQueue',
                'db_table': 'CommunicationQueue',
            },
        ),
        migrations.CreateModel(
            name='CommunicationSource',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CommunicationSourceId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationsource_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationsource_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CommunicationSource',
                'verbose_name_plural': 'CommunicationSource',
                'db_table': 'CommunicationSource',
            },
        ),
        migrations.CreateModel(
            name='CommunicationStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CommunicationStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CommunicationStatus',
                'verbose_name_plural': 'CommunicationStatus',
                'db_table': 'CommunicationStatus',
            },
        ),
        migrations.CreateModel(
            name='CommunicationType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CommunicationTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationtype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CommunicationType',
                'verbose_name_plural': 'CommunicationType',
                'db_table': 'CommunicationType',
            },
        ),
        migrations.CreateModel(
            name='CompetitiveRivalry',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CompetitiveRivalryId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitiverivalry_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitiverivalry_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CompetitiveRivalry',
                'verbose_name_plural': 'CompetitiveRivalry',
                'db_table': 'CompetitiveRivalry',
            },
        ),
        migrations.CreateModel(
            name='ConfirmationStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ConfirmationStatusId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='confirmationstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='confirmationstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ConfirmationStatus',
                'verbose_name_plural': 'ConfirmationStatus',
                'db_table': 'ConfirmationStatus',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CountryId', models.IntegerField(primary_key=True, serialize=False)),
                ('TelPrefix', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Country',
                'db_table': 'Country',
            },
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CoverageId', models.AutoField(primary_key=True, serialize=False)),
                ('CoverageIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('FacilityIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('CollateralIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('Assignment', models.FloatField(blank=True, null=True)),
                ('LienOrder', models.IntegerField(blank=True, null=True)),
                ('BindWith', models.CharField(blank=True, max_length=10, null=True)),
                ('CollateralId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Collateral')),
            ],
            options={
                'verbose_name': 'Coverage',
                'verbose_name_plural': 'Coverage',
                'db_table': 'Coverage',
            },
        ),
        migrations.CreateModel(
            name='CoverageArchived',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CoverageId', models.AutoField(primary_key=True, serialize=False)),
                ('CoverageIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('FacilityIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('ArchivedVersion', models.IntegerField()),
                ('CollateralIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('Assignment', models.FloatField(blank=True, null=True)),
                ('LienOrder', models.IntegerField(blank=True, null=True)),
                ('CollateralId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Collateral')),
            ],
            options={
                'verbose_name': 'CoverageArchived',
                'verbose_name_plural': 'CoverageArchived',
                'db_table': 'CoverageArchived',
            },
        ),
        migrations.CreateModel(
            name='CreditApplication',
            fields=[
                ('CreditApplicationId', models.AutoField(primary_key=True, serialize=False)),
                ('PurposesApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProductsApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CollateralsApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DecisionDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('DecisionExpiryDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('DecisionReviewTenor', models.IntegerField(blank=True, default=None, null=True)),
                ('DecisionNextReviewDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('PrintFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('TATNet', models.IntegerField(blank=True, default=None, null=True)),
                ('TATGross', models.IntegerField(blank=True, default=None, null=True)),
                ('ReceivedDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('LastReviewDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('LastWFLStepDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('CurrentWFLStepWith', models.IntegerField(blank=True, default=None, null=True)),
                ('IsArchived', models.BooleanField(blank=True, default=False, null=True)),
                ('ArchivedDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('ApplicationPriority', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ApplicationPriority')),
                ('ApplicationSource', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ApplicationSource')),
                ('ApplicationStatus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ApplicationStatus')),
                ('ApplicationTemplate', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ApplicationTemplate')),
                ('ApplicationType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ApplicationType')),
                ('ArchivedBy', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ArchivedBy', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditApplication',
                'verbose_name_plural': 'CreditApplication',
                'db_table': 'CreditApplication',
            },
        ),
        migrations.CreateModel(
            name='CreditApplicationBankingSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ExistingCommitment', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingBalance', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingExposure', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedCommitment', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedBalance', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedExposure', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedIncrease', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedCommitment', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedBalance', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedExposure', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedIncrease', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingMarketValue', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingForcedSaleValue', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingDiscountedValue', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingLienValue', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingCoverageByMV', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingCoverageByFSV', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingCoverageByDV', models.FloatField(blank=True, default=None, null=True)),
                ('ExistingCoverageByLV', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedMarketValue', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedForcedSaleValue', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedDiscountedValue', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedLienValue', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedCoverageByMV', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedCoverageByFSV', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedCoverageByDV', models.FloatField(blank=True, default=None, null=True)),
                ('ProposedCoverageByLV', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedMarketValue', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedForcedSaleValue', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedDiscountedValue', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedLienValue', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedCoverageByMV', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedCoverageByFSV', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedCoverageByDV', models.FloatField(blank=True, default=None, null=True)),
                ('ApprovedCoverageByLV', models.FloatField(blank=True, default=None, null=True)),
                ('CreditApplicationId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditapplicationbankingsummary_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditapplicationbankingsummary_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditApplicationBankingSummary',
                'verbose_name_plural': 'CreditApplicationBankingSummary',
                'db_table': 'CreditApplicationBankingSummary',
            },
        ),
        migrations.CreateModel(
            name='CreditApplicationStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('IsPrimaryRelatedStaff', models.BooleanField(default=False)),
                ('Comment', models.TextField(blank=True, null=True)),
                ('CreditApplicationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditapplicationstaff_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditapplicationstaff_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditApplicationStaff',
                'verbose_name_plural': 'CreditApplicationStaff',
                'db_table': 'CreditApplicationStaff',
            },
        ),
        migrations.CreateModel(
            name='CreditApplicationTemplateState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ApplicationTemplateSectionState', models.IntegerField(blank=True, null=True)),
                ('ApplicationTemplate', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ApplicationTemplate')),
                ('ApplicationTemplateSection', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ApplicationTemplateSection')),
                ('CreditApplicationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditapplicationtemplatestate_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditapplicationtemplatestate_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditApplicationTemplateState',
                'verbose_name_plural': 'CreditApplicationTemplateState',
                'db_table': 'CreditApplicationTemplateState',
            },
        ),
        migrations.CreateModel(
            name='CreditMemo',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CreditMemoId', models.AutoField(primary_key=True, serialize=False)),
                ('ModuleId', models.IntegerField(blank=True, default=None, null=True)),
                ('EntityTypesApplicable', models.IntegerField(blank=True, default=None, null=True)),
                ('RequestTypesApplicable', models.IntegerField(blank=True, default=None, null=True)),
                ('ProductTypesApplicable', models.IntegerField(blank=True, default=None, null=True)),
                ('CollateralTypesApplicable', models.IntegerField(blank=True, default=None, null=True)),
                ('Name', models.CharField(max_length=100)),
                ('Description', models.CharField(max_length=300)),
                ('CreditMemoId1', models.IntegerField(blank=True, default=None, null=True)),
                ('EnabledFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemo_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemo_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditMemo',
                'verbose_name_plural': 'CreditMemo',
                'db_table': 'CreditMemo',
            },
        ),
        migrations.CreateModel(
            name='CreditMemoParam',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('LastViewedDate', models.DateTimeField(blank=True, null=True)),
                ('ParamId', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=100)),
                ('Description', models.CharField(max_length=300)),
                ('Setting1', models.IntegerField(blank=True, null=True)),
                ('Setting2', models.IntegerField(blank=True, null=True)),
                ('Setting3', models.IntegerField(blank=True, null=True)),
                ('CreditMemoId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CreditMemo')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemoparam_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemoparam_updated_by', to=settings.AUTH_USER_MODEL)),
                ('LastViewedBy', models.ForeignKey(blank=True, db_column='ViewedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemoparam_viewed_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditMemoParam',
                'verbose_name_plural': 'CreditMemoParam',
                'db_table': 'CreditMemoParam',
            },
        ),
        migrations.CreateModel(
            name='CreditMemoRecent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CreditMemoId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CreditMemo')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemorecent_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemorecent_updated_by', to=settings.AUTH_USER_MODEL)),
                ('StaffId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditMemoRecent',
                'verbose_name_plural': 'CreditMemoRecent',
                'db_table': 'CreditMemoRecent',
            },
        ),
        migrations.CreateModel(
            name='CreditMemoSection',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('LastViewedDate', models.DateTimeField(blank=True, null=True)),
                ('CreditMemoSectionId', models.AutoField(primary_key=True, serialize=False)),
                ('SectionOrder', models.IntegerField(default=1)),
                ('Name1', models.CharField(max_length=100)),
                ('Name2', models.CharField(max_length=100)),
                ('Description', models.CharField(max_length=300)),
                ('TemplateId', models.IntegerField(blank=True, default=None, null=True)),
                ('QueryId', models.IntegerField(blank=True, default=None, null=True)),
                ('SectionContent', models.TextField(blank=True, default=None, null=True)),
                ('CreditMemoId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CreditMemo')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemosection_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemosection_updated_by', to=settings.AUTH_USER_MODEL)),
                ('LastViewedBy', models.ForeignKey(blank=True, db_column='ViewedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemosection_viewed_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CreditMemoSection',
                'verbose_name_plural': 'CreditMemoSection',
                'db_table': 'CreditMemoSection',
            },
        ),
        migrations.CreateModel(
            name='CreditMemoSectionParam',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('LastViewedDate', models.DateTimeField(blank=True, null=True)),
                ('CreditMemoSectionParamId', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=100)),
                ('Description', models.CharField(max_length=300)),
                ('Setting1', models.IntegerField(blank=True, null=True)),
                ('Setting2', models.IntegerField(blank=True, null=True)),
                ('Setting3', models.IntegerField(blank=True, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemosectionparam_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemosectionparam_updated_by', to=settings.AUTH_USER_MODEL)),
                ('LastViewedBy', models.ForeignKey(blank=True, db_column='ViewedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creditmemosectionparam_viewed_by', to=settings.AUTH_USER_MODEL)),
                ('ParamId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.CreditMemoParam')),
            ],
            options={
                'verbose_name': 'CreditMemoSectionParam',
                'verbose_name_plural': 'CreditMemoSectionParam',
                'db_table': 'CreditMemoSectionParam',
            },
        ),
        migrations.CreateModel(
            name='CRMPortfolio',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CRMPortfolioId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crmportfolio_inserted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CRMPortfolio',
                'verbose_name_plural': 'CRMPortfolio',
                'db_table': 'CRMPortfolio',
            },
        ),
        migrations.CreateModel(
            name='CRMStrategy',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CRMStrategyId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crmstrategy_inserted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CRMStrategy',
                'verbose_name_plural': 'CRMStrategy',
                'db_table': 'CRMStrategy',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CurrencyId', models.AutoField(primary_key=True, serialize=False)),
                ('IsoCode1', models.CharField(blank=True, max_length=5, null=True)),
                ('IsoCode2', models.IntegerField(blank=True, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='currency_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='currency_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currency',
                'db_table': 'Currency',
            },
        ),
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CurrencyRateId', models.AutoField(primary_key=True, serialize=False)),
                ('ExchangeRate', models.FloatField(blank=True, null=True)),
                ('RateDate', models.DateTimeField(blank=True, null=True)),
                ('CurrencyIn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CurrencyIn', to='common.Currency')),
                ('CurrencyOut', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CurrencyOut', to='common.Currency')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='currencyrate_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='currencyrate_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CurrencyRate',
                'verbose_name_plural': 'CurrencyRate',
                'db_table': 'CurrencyRate',
            },
        ),
        migrations.CreateModel(
            name='DecisionMakingType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DecisionMakingTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decisionmakingtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decisionmakingtype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DecisionMakingType',
                'verbose_name_plural': 'DecisionMakingType',
                'db_table': 'DecisionMakingType',
            },
        ),
        migrations.CreateModel(
            name='DecisionType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DecisionTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decisiontype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decisiontype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DecisionType',
                'verbose_name_plural': 'DecisionType',
                'db_table': 'DecisionType',
            },
        ),
        migrations.CreateModel(
            name='DeclineReason',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DeclineReasonId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='declinereason_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='declinereason_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DeclineReason',
                'verbose_name_plural': 'DeclineReason',
                'db_table': 'DeclineReason',
            },
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DepositId', models.AutoField(primary_key=True, serialize=False)),
                ('DataView', models.IntegerField(blank=True, null=True)),
                ('DepositIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('DepositIdOther1', models.CharField(blank=True, max_length=50, null=True)),
                ('DepositIdOther2', models.CharField(blank=True, max_length=50, null=True)),
                ('ArrangementTypeHost', models.CharField(blank=True, max_length=20, null=True)),
                ('Description1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Description2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Description3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Description4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Currency', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NominalFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CurrentFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXDealRef', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorOriginal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorRemaining', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRateDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MaturityDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NextRolloverDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalDeposit', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalPrincipal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalInterestPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh1M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh3M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh6M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh12M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHighYTD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow1M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow3M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow6M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow12M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLowYTD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg1M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg3M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg6M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg12M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvgYTD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ArrangementClass', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementClass')),
                ('ArrangementType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType')),
            ],
            options={
                'verbose_name': 'Deposit',
                'verbose_name_plural': 'Deposit',
                'db_table': 'Deposit',
            },
        ),
        migrations.CreateModel(
            name='DepositArchived',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DepositId', models.AutoField(primary_key=True, serialize=False)),
                ('DataView', models.IntegerField(blank=True, null=True)),
                ('DepositIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('DepositIdOther1', models.CharField(blank=True, max_length=50, null=True)),
                ('DepositIdOther2', models.CharField(blank=True, max_length=50, null=True)),
                ('ArrangementTypeHost', models.CharField(blank=True, max_length=20, null=True)),
                ('ArchiveVersion', models.IntegerField(blank=True, null=True)),
                ('ArchiveStatus', models.IntegerField(blank=True, null=True)),
                ('Description1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Description2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Description3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Description4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Currency', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NominalFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CurrentFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXDealRef', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorOriginal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorRemaining', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRateDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MaturityDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NextRolloverDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalDeposit', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalPrincipal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalInterestPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh1M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh3M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh6M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHigh12M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceHighYTD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow1M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow3M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow6M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLow12M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceLowYTD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg1M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg3M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg6M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvg12M', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceAvgYTD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ActiveVersion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Deposit')),
                ('ArrangementClass', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementClass')),
                ('ArrangementType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType')),
            ],
            options={
                'verbose_name': 'DepositArchived',
                'verbose_name_plural': 'DepositArchived',
                'db_table': 'DepositArchived',
            },
        ),
        migrations.CreateModel(
            name='DistributionStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DistributionStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='distributionstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='distributionstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DistributionStatus',
                'verbose_name_plural': 'DistributionStatus',
                'db_table': 'DistributionStatus',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentId', models.AutoField(primary_key=True, serialize=False)),
                ('Name1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Name2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('CharDocumentId', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('FileType', models.CharField(blank=True, max_length=100, null=True)),
                ('FileName', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('FileURL', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('FileSize', models.CharField(blank=True, max_length=100, null=True)),
                ('DocumentDateFirst', models.DateTimeField(blank=True, default=None, null=True)),
                ('DocumentDateNext', models.DateTimeField(blank=True, default=None, null=True)),
                ('DocumentDateLast', models.DateTimeField(blank=True, default=None, null=True)),
                ('ExpectedDocuments', models.IntegerField(blank=True, default=None, null=True)),
                ('SkipEvery', models.IntegerField(blank=True, default=None, null=True)),
                ('StartSkip', models.IntegerField(blank=True, default=None, null=True)),
                ('AlertEnabledFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('AlertDays', models.IntegerField(blank=True, default=None, null=True)),
                ('AlertTemplateId', models.IntegerField(blank=True, default=None, null=True)),
                ('AlertEmailFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('AlertSenderId', models.IntegerField(blank=True, default=None, null=True)),
                ('AlertRecipientId', models.TextField(blank=True, default=None, null=True)),
                ('AlertBasePartyEmailId', models.TextField(blank=True, default=None, null=True)),
                ('WarningEnabledFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('WarningDays', models.IntegerField(blank=True, default=None, null=True)),
                ('WarningTemplateId', models.IntegerField(blank=True, default=None, null=True)),
                ('WarningEmailFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('WarningSenderId', models.IntegerField(blank=True, default=None, null=True)),
                ('WarningRecipientId', models.TextField(blank=True, default=None, null=True)),
                ('WarningBasePartyEmailId', models.TextField(blank=True, default=None, null=True)),
                ('StorageLocation', models.IntegerField(blank=True, null=True)),
                ('FirstUploadDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('LastVerifyDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('LastClearDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('AlertConvertOption', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AlertConvertOption', to='common.AlertConvertOption')),
                ('AlertDocumentStatus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AlertDocumentStatus', to='common.AlertDocumentStatus')),
                ('AlertEmailOption', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AlertEmailOption', to='common.AlertEmailOption')),
                ('AlertSeverity', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AlertSeverity', to='common.AlertSeverity')),
                ('AlertSource', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AlertSource', to='common.AlertSource')),
                ('AlertStatus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AlertStatus', to='common.AlertStatus')),
                ('AlertSubType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AlertSubType', to='common.AlertSubType')),
                ('AlertType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AsdAlertType', to='common.AlertType')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Document',
                'db_table': 'Document',
            },
        ),
        migrations.CreateModel(
            name='DocumentFile',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentFileId', models.AutoField(primary_key=True, serialize=False)),
                ('FileType', models.CharField(blank=True, max_length=100, null=True)),
                ('FileName', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('FileURL', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('FileSize', models.CharField(blank=True, max_length=100, null=True)),
                ('FileObject', models.TextField(blank=True, default=None, null=True)),
                ('UploadDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('VerifiedDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('DocumentDateNext', models.DateTimeField(blank=True, default=None, null=True)),
                ('DocumentId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Document')),
            ],
            options={
                'verbose_name': 'DocumentFile',
                'verbose_name_plural': 'DocumentFile',
                'db_table': 'DocumentFile',
            },
        ),
        migrations.CreateModel(
            name='DocumentIdType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentIdTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentidtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentidtype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DocumentIdType',
                'verbose_name_plural': 'DocumentIdType',
                'db_table': 'DocumentIdType',
            },
        ),
        migrations.CreateModel(
            name='DocumentRelatedItem',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentRelatedItemId', models.AutoField(primary_key=True, serialize=False)),
                ('RelatedItemId', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('DocumentId', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Document')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentrelateditem_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentrelateditem_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DocumentRelatedItem',
                'verbose_name_plural': 'DocumentRelatedItem',
                'db_table': 'DocumentRelatedItem',
            },
        ),
        migrations.CreateModel(
            name='DocumentStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DocumentStatus',
                'verbose_name_plural': 'DocumentStatus',
                'db_table': 'DocumentStatus',
            },
        ),
        migrations.CreateModel(
            name='DocumentStore',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentStoreId', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'DocumentStore',
                'verbose_name_plural': 'DocumentStore',
                'db_table': 'DocumentStore',
            },
        ),
        migrations.CreateModel(
            name='DocumentStoreType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentStoreTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentstoretype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentstoretype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DocumentStoreType',
                'verbose_name_plural': 'DocumentStoreType',
                'db_table': 'DocumentStoreType',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('DocumentTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documenttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documenttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DocumentType',
                'verbose_name_plural': 'DocumentType',
                'db_table': 'DocumentType',
            },
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('EducationLevelId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='educationlevel_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='educationlevel_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EducationLevel',
                'verbose_name_plural': 'EducationLevel',
                'db_table': 'EducationLevel',
            },
        ),
        migrations.CreateModel(
            name='EmailType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('EmailTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emailtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emailtype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EmailType',
                'verbose_name_plural': 'EmailType',
                'db_table': 'EmailType',
            },
        ),
        migrations.CreateModel(
            name='EmployerSector',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('EmployerSectorId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employersector_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employersector_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EmployerSector',
                'verbose_name_plural': 'EmployerSector',
                'db_table': 'EmployerSector',
            },
        ),
        migrations.CreateModel(
            name='EmployerType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('EmployerTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employertype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employertype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EmployerType',
                'verbose_name_plural': 'EmployerType',
                'db_table': 'EmployerType',
            },
        ),
        migrations.CreateModel(
            name='EmploymentType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('EmploymentTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employmenttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employmenttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EmploymentType',
                'verbose_name_plural': 'EmploymentType',
                'db_table': 'EmploymentType',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FacilityId', models.AutoField(primary_key=True, serialize=False)),
                ('DataView', models.IntegerField(blank=True, null=True)),
                ('FacilityIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('FacilityIdOther1', models.CharField(blank=True, max_length=50, null=True)),
                ('FacilityIdOther2', models.CharField(blank=True, max_length=50, null=True)),
                ('ArrangementTypeHost', models.CharField(blank=True, max_length=20, null=True)),
                ('ActionableFlag', models.BooleanField(default=False)),
                ('Description1', models.CharField(blank=True, max_length=100, null=True)),
                ('Description2', models.CharField(blank=True, max_length=100, null=True)),
                ('Description3', models.CharField(blank=True, max_length=100, null=True)),
                ('Description4', models.CharField(blank=True, max_length=100, null=True)),
                ('Purpose', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Currency', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NominalFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CurrentFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXDealRef', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Sector', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Industry', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('FrequencyTenor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('FrequencyRepayment', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorOriginal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorRemaining', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DisbursementsCount', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LastDisbursementDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRateDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MaturityDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExpiryDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('FirstPaymentDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LastPaymentDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NextPaymentDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PrincipalDueDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InterestDueDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DefaultDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CommitmentValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProposedValue', models.FloatField(blank=True, null=True)),
                ('DisbursedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UndisbursedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UtilisedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UnutilizedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExposureTotal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExposureUnused', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RepaymentAmount', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalPrincipalPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalInterestPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalFeesPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CostOfFunds', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('IsSecured', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('IsGuaranteed', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OpenMarketValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DiscountedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ForcedSaleValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageByMV', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageByDV', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageByFSV', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueExposure', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDuePrincipal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueInterest', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PenaltyInterestDue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('SpecificProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InterestProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExcessProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MinimumProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('WriteDown', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('WriteBack', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NetDebt', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RecoveredAmount', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProfessionalFeesPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NetBalance', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BISAssetClass', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RatingInternalPD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RatingInternalLGD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProbabilityOfDefault', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LossGivenDefault', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExposureAtDefault', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExpectedLoss', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UnexpectedLoss', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationCost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ServicingCost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('AverageFees', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OperationCost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OperationCapital', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RegulatoryCapital', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EconomicCapital', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RAROC', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RWADrawn', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RWAUndrawn', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RWATotal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ArrangementClass', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementClass')),
                ('ArrangementType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType')),
            ],
            options={
                'verbose_name': 'Facility',
                'verbose_name_plural': 'Facility',
                'db_table': 'Facility',
            },
        ),
        migrations.CreateModel(
            name='FacilityArchived',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FacilityId', models.AutoField(primary_key=True, serialize=False)),
                ('ArchiveVersion', models.IntegerField(blank=True, null=True)),
                ('ArchiveStatus', models.IntegerField(blank=True, null=True)),
                ('DataView', models.IntegerField(blank=True, null=True)),
                ('FacilityIdHost', models.CharField(blank=True, max_length=50, null=True)),
                ('FacilityIdOther1', models.CharField(blank=True, max_length=50, null=True)),
                ('FacilityIdOther2', models.CharField(blank=True, max_length=50, null=True)),
                ('ArrangementTypeHost', models.CharField(blank=True, max_length=20, null=True)),
                ('ActionableFlag', models.BooleanField(default=False)),
                ('Description1', models.CharField(blank=True, max_length=100, null=True)),
                ('Description2', models.CharField(blank=True, max_length=100, null=True)),
                ('Description3', models.CharField(blank=True, max_length=100, null=True)),
                ('Description4', models.CharField(blank=True, max_length=100, null=True)),
                ('Purpose', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Currency', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NominalFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CurrentFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXDealRef', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Sector', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Industry', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('FrequencyTenor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('FrequencyRepayment', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorOriginal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TenorRemaining', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DisbursementsCount', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RelationshipOfficer3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Account4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ParameterSummary3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LastDisbursementDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NegotiatedFXRateDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MaturityDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExpiryDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('FirstPaymentDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LastPaymentDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NextPaymentDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PrincipalDueDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InterestDueDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DefaultDate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovalValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginalValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CommitmentValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BalanceValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProposedValue', models.FloatField(blank=True, null=True)),
                ('DisbursedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UndisbursedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UtilisedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UnutilizedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExposureTotal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExposureUnused', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RepaymentAmount', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalPrincipalPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalInterestPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalFeesPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApprovedSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveBaseRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadFloor', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadCeiling', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EffectiveSpreadRate', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CostOfFunds', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Fee20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('IsSecured', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('IsGuaranteed', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OpenMarketValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('DiscountedValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ForcedSaleValue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageByMV', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageByDV', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CoverageByFSV', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueExposure', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDuePrincipal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueInterest', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PenaltyInterestDue', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('PastDueBucket6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('SpecificProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InterestProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('TotalProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExcessProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('MinimumProvisions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('WriteDown', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('WriteBack', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NetDebt', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RecoveredAmount', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProfessionalFeesPaid', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('NetBalance', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('BISAssetClass', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RatingInternalPD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RatingInternalLGD', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProbabilityOfDefault', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('LossGivenDefault', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExposureAtDefault', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ExpectedLoss', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('UnexpectedLoss', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OriginationCost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ServicingCost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('AverageFees', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OperationCost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('OperationCapital', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RegulatoryCapital', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('EconomicCapital', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RAROC', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RWADrawn', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RWAUndrawn', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('RWATotal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Code30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Value30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Text30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date7', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date8', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date9', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date10', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date11', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date12', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date13', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date14', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date15', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date16', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date17', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date18', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date19', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date20', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date21', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date22', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date23', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date24', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date25', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date26', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date27', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date28', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date29', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('Date30', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ActiveVersion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Facility')),
                ('ArrangementClass', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementClass')),
                ('ArrangementType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType')),
            ],
            options={
                'verbose_name': 'FacilityArchived',
                'verbose_name_plural': 'FacilityArchived',
                'db_table': 'FacilityArchived',
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FileTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'FileType',
                'verbose_name_plural': 'FileType',
                'db_table': 'FileType',
            },
        ),
        migrations.CreateModel(
            name='FinancialInstitution',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FinancialInstitutionId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financialinstitution_inserted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'FinancialInstitution',
                'verbose_name_plural': 'FinancialInstitution',
                'db_table': 'FinancialInstitution',
            },
        ),
        migrations.CreateModel(
            name='FinancialModel',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FinancialModelId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financialmodel_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financialmodel_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'FinancialModel',
                'verbose_name_plural': 'FinancialModel',
                'db_table': 'FinancialModel',
            },
        ),
        migrations.CreateModel(
            name='FiscalYearEnd',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FiscalYearEndId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fiscalyearend_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fiscalyearend_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'FiscalYearEnd',
                'verbose_name_plural': 'FiscalYearEnd',
                'db_table': 'FiscalYearEnd',
            },
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FlagId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flag_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flag_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Flag',
                'verbose_name_plural': 'Flag',
                'db_table': 'Flag',
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FrequencyId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frequency_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='frequency_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Frequency',
                'verbose_name_plural': 'Frequency',
                'db_table': 'Frequency',
            },
        ),
        migrations.CreateModel(
            name='GovernanceType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('GovernanceTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='governancetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='governancetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'GovernanceType',
                'verbose_name_plural': 'GovernanceType',
                'db_table': 'GovernanceType',
            },
        ),
        migrations.CreateModel(
            name='GuaranteeType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('GuaranteeTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guaranteetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guaranteetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'GuaranteeType',
                'verbose_name_plural': 'GuaranteeType',
                'db_table': 'GuaranteeType',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('HostId', models.IntegerField(primary_key=True, serialize=False)),
                ('PullDataClasses', models.TextField()),
                ('PushDataClasses', models.TextField()),
                ('HostUser', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('HostPassword', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('PasswordChangeFlag', models.IntegerField()),
                ('PasswordExpiryFlag', models.IntegerField()),
                ('PasswordExpiryWarnDays', models.IntegerField()),
                ('LockoutFlag', models.IntegerField()),
                ('LockoutMaxAttempts', models.IntegerField()),
                ('LockoutSeconds', models.IntegerField()),
                ('PssswordStrength', models.IntegerField()),
                ('PssswordMinLength', models.IntegerField()),
                ('AutoDisableFlag', models.IntegerField()),
                ('AutoDisableDays', models.IntegerField()),
                ('PasswordLookbackFlag', models.IntegerField()),
                ('PasswordLookbackCount', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Host',
                'verbose_name_plural': 'Host',
                'db_table': 'Host',
            },
        ),
        migrations.CreateModel(
            name='HostLoginMode',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('HostTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hostloginmode_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hostloginmode_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'HostLoginMode',
                'verbose_name_plural': 'HostLoginMode',
                'db_table': 'HostLoginMode',
            },
        ),
        migrations.CreateModel(
            name='HostType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('HostTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'HostType',
                'verbose_name_plural': 'HostType',
            },
        ),
        migrations.CreateModel(
            name='IdentifierCategory',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('IdentifierCategoryId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifiercategory_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifiercategory_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IdentifierCategory',
                'verbose_name_plural': 'IdentifierCategory',
                'db_table': 'IdentifierCategory',
            },
        ),
        migrations.CreateModel(
            name='IdentifierType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('IdentifierTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifiertype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifiertype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IdentifierType',
                'verbose_name_plural': 'IdentifierType',
                'db_table': 'IdentifierType',
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('IndustryId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='industry_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='industry_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industry',
                'db_table': 'Industry',
            },
        ),
        migrations.CreateModel(
            name='IndustryAnalysis',
            fields=[
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('IndustryAnalysisId', models.AutoField(primary_key=True, serialize=False)),
                ('ProductServiceSold', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('RevenueContribution', models.FloatField(blank=True, default=None, null=True)),
                ('PercentTotalRevenue', models.FloatField(blank=True, default=None, null=True)),
                ('PercentMarketShare', models.FloatField(blank=True, default=None, null=True)),
                ('GrowthRate', models.FloatField(blank=True, default=None, null=True)),
                ('IsPrimaryRevenueStream', models.BooleanField(default=False)),
                ('Comment', models.TextField(blank=True, default=None, null=True)),
                ('StartDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('EndDate', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'IndustryAnalysis',
                'verbose_name_plural': 'IndustryAnalysis',
                'db_table': 'IndustryAnalysis',
            },
        ),
        migrations.CreateModel(
            name='JobGrade',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('JobGradeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobgrade_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobgrade_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'JobGrade',
                'verbose_name_plural': 'JobGrade',
                'db_table': 'JobGrade',
            },
        ),
        migrations.CreateModel(
            name='LimitType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('LimitTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='limittype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='limittype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LimitType',
                'verbose_name_plural': 'LimitType',
                'db_table': 'LimitType',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('LocationId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Location',
                'db_table': 'Location',
            },
        ),
        migrations.CreateModel(
            name='LogChange',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('LogChangeId', models.AutoField(primary_key=True, serialize=False)),
                ('ItemType', models.IntegerField()),
                ('ItemKey', models.IntegerField()),
                ('ChangeText', models.TextField(blank=True, default=None, null=True)),
                ('ChangeTypeId', models.ForeignKey(db_column='BasePartyId', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Addresses', to='common.ChangeType')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logchange_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logchange_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LogChange',
                'verbose_name_plural': 'LogChange',
                'db_table': 'LogChange',
            },
        ),
        migrations.CreateModel(
            name='ManagementLevel',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ManagementLevelId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managementlevel_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managementlevel_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ManagementLevel',
                'verbose_name_plural': 'ManagementLevel',
                'db_table': 'ManagementLevel',
            },
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('MaritalStatusId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maritalstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maritalstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MaritalStatus',
                'verbose_name_plural': 'MaritalStatus',
                'db_table': 'MaritalStatus',
            },
        ),
        migrations.CreateModel(
            name='NewEntrantThreat',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('NewEntrantThreatId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newentrantthreat_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newentrantthreat_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'NewEntrantThreat',
                'verbose_name_plural': 'NewEntrantThreat',
                'db_table': 'NewEntrantThreat',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('NoteId', models.AutoField(primary_key=True, serialize=False)),
                ('NoteLevel', models.IntegerField(blank=True, default=None, null=True)),
                ('Note', models.TextField(blank=True, default=None, null=True)),
                ('ModuleId', models.IntegerField(blank=True, default=None, null=True)),
                ('NoteKey1', models.IntegerField(blank=True, default=None, null=True)),
                ('NoteKey2', models.IntegerField(blank=True, default=None, null=True)),
                ('NoteKey3', models.IntegerField(blank=True, default=None, null=True)),
                ('Tab', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Note',
                'db_table': 'Note',
            },
        ),
        migrations.CreateModel(
            name='OperationalStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('OperationalStatusId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operationalstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operationalstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OperationalStatus',
                'verbose_name_plural': 'OperationalStatus',
                'db_table': 'OperationalStatus',
            },
        ),
        migrations.CreateModel(
            name='PostingRestrictionType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('PostingRestrictionTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postingrestrictiontype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postingrestrictiontype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PostingRestrictionType',
                'verbose_name_plural': 'PostingRestrictionType',
                'db_table': 'PostingRestrictionType',
            },
        ),
        migrations.CreateModel(
            name='PreferenceType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('PreferenceTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preferencetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preferencetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PreferenceType',
                'verbose_name_plural': 'PreferenceType',
                'db_table': 'PreferenceType',
            },
        ),
        migrations.CreateModel(
            name='Prefix',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('PrefixId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prefix_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prefix_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prefix',
                'verbose_name_plural': 'Prefix',
                'db_table': 'Prefix',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('PriorityId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Priority',
                'verbose_name_plural': 'Priority',
                'db_table': 'Priority',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ProductTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='producttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ProductType',
                'verbose_name_plural': 'ProductType',
                'db_table': 'ProductType',
            },
        ),
        migrations.CreateModel(
            name='ProfileType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ProfileTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiletype_inserted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ProfileType',
                'verbose_name_plural': 'ProfileType',
                'db_table': 'ProfileType',
            },
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('PurposeId', models.AutoField(primary_key=True, serialize=False)),
                ('PurposeLevel', models.IntegerField(default=1)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purpose_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purpose_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Purpose',
                'verbose_name_plural': 'Purpose',
                'db_table': 'Purpose',
            },
        ),
        migrations.CreateModel(
            name='ReadStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ReadStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='readstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='readstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ReadStatus',
                'verbose_name_plural': 'ReadStatus',
                'db_table': 'ReadStatus',
            },
        ),
        migrations.CreateModel(
            name='RecentItem',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RecentItemId', models.AutoField(primary_key=True, serialize=False)),
                ('ItemType', models.IntegerField()),
                ('ItemKey', models.IntegerField()),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recentitem_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recentitem_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RecentItem',
                'verbose_name_plural': 'RecentItem',
                'db_table': 'RecentItem',
            },
        ),
        migrations.CreateModel(
            name='RecipientType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RecipientTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipienttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipienttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RecipientType',
                'verbose_name_plural': 'RecipientType',
                'db_table': 'RecipientType',
            },
        ),
        migrations.CreateModel(
            name='RelatedItemType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RelatedItemTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relateditemtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relateditemtype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RelatedItemType',
                'verbose_name_plural': 'RelatedItemType',
                'db_table': 'RelatedItemType',
            },
        ),
        migrations.CreateModel(
            name='RelatedParty',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('EditHostValuesFlag', models.IntegerField(blank=True, default=None, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RelatedPartyId', models.AutoField(primary_key=True, serialize=False)),
                ('PercentOwnership', models.FloatField(blank=True, default=None, null=True)),
                ('PercentVoting', models.FloatField(blank=True, default=None, null=True)),
                ('SharesCount', models.IntegerField(blank=True, default=None, null=True)),
                ('SharesValue', models.FloatField(blank=True, default=None, null=True)),
                ('PercentGuaranteed', models.FloatField(blank=True, default=None, null=True)),
                ('MaxGuaranteeAmount', models.FloatField(blank=True, default=None, null=True)),
                ('IsControllingOwner', models.BooleanField(default=False)),
                ('LinkFinancials', models.BooleanField(default=False)),
                ('LinkBankingInfo', models.BooleanField(default=False)),
                ('LinkApplications', models.BooleanField(default=False)),
                ('Comment', models.TextField(blank=True, default=None, null=True)),
                ('StartDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('EndDate', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'RelatedParty',
                'verbose_name_plural': 'RelatedParty',
                'db_table': 'RelatedParty',
            },
        ),
        migrations.CreateModel(
            name='RelatedStaff',
            fields=[
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RelatedStaffId', models.IntegerField(primary_key=True, serialize=False)),
                ('StaffId', models.IntegerField(blank=True, default=None, null=True)),
                ('Comment', models.TextField(blank=True, default=None, null=True)),
                ('StartDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('EndDate', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'RelatedStaff',
                'verbose_name_plural': 'RelatedStaff',
                'db_table': 'RelatedStaff',
            },
        ),
        migrations.CreateModel(
            name='RelationCategory',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RelationCategoryId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationcategory_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationcategory_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RelationCategory',
                'verbose_name_plural': 'RelationCategory',
                'db_table': 'RelationCategory',
            },
        ),
        migrations.CreateModel(
            name='RelationType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RelationTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationtype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationtype_updated_by', to=settings.AUTH_USER_MODEL)),
                ('RelationCategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.RelationCategory')),
            ],
            options={
                'verbose_name': 'RelationType',
                'verbose_name_plural': 'RelationType',
                'db_table': 'RelationType',
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('RequestTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requesttype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requesttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RequestType',
                'verbose_name_plural': 'RequestType',
                'db_table': 'RequestType',
            },
        ),
        migrations.CreateModel(
            name='ResidentialStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ResidentialStatusId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residentialstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residentialstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ResidentialStatus',
                'verbose_name_plural': 'ResidentialStatus',
                'db_table': 'ResidentialStatus',
            },
        ),
        migrations.CreateModel(
            name='SalaryFrequency',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SalaryFrequencyId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salaryfrequency_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salaryfrequency_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SalaryFrequency',
                'verbose_name_plural': 'SalaryFrequency',
                'db_table': 'SalaryFrequency',
            },
        ),
        migrations.CreateModel(
            name='SalaryPayMode',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SalaryPayModeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salarypaymode_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salarypaymode_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SalaryPayMode',
                'verbose_name_plural': 'SalaryPayMode',
                'db_table': 'SalaryPayMode',
            },
        ),
        migrations.CreateModel(
            name='SearchCriteria',
            fields=[
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('CriteriaId', models.AutoField(primary_key=True, serialize=False)),
                ('CriteriaName', models.CharField(blank=True, max_length=50, null=True)),
                ('CriteriaSymbol', models.CharField(blank=True, max_length=10, null=True)),
                ('IsExcludeCondition', models.BooleanField(default=False, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchcriteria_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchcriteria_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SearchCriteria',
                'db_table': 'SearchCriteria',
            },
        ),
        migrations.CreateModel(
            name='SearchFields',
            fields=[
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('FieldId', models.AutoField(primary_key=True, serialize=False)),
                ('FieldType', models.IntegerField(blank=True, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('Description', models.CharField(blank=True, max_length=50, null=True)),
                ('ActiveFlag', models.BooleanField(default=True)),
                ('AllowNullFlag', models.BooleanField(default=True)),
                ('LookupKey', models.CharField(blank=True, max_length=50, null=True)),
                ('LookupValue', models.CharField(blank=True, max_length=50, null=True)),
                ('ApplicableCriteria', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('FieldModelPath', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('DefaultCriteriaId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='common.SearchCriteria')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchfields_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchfields_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SearchFields',
                'db_table': 'SearchFields',
            },
        ),
        migrations.CreateModel(
            name='SearchGridConfig',
            fields=[
                ('PrintFlag', models.BooleanField(default=False)),
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SearchGridId', models.AutoField(primary_key=True, serialize=False)),
                ('GridConfig', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchgridconfig_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchgridconfig_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SearchGridConfig',
                'db_table': 'SearchGridConfig',
            },
        ),
        migrations.CreateModel(
            name='SearchTemplateParams',
            fields=[
                ('OrderingRank', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ParamId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchtemplateparams_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchtemplateparams_updated_by', to=settings.AUTH_USER_MODEL)),
                ('TemplateField', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.SearchFields')),
            ],
            options={
                'verbose_name': 'SearchTemplateParams',
                'db_table': 'SearchTemplateParams',
            },
        ),
        migrations.CreateModel(
            name='SearchTemplates',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('TemplateId', models.AutoField(primary_key=True, serialize=False)),
                ('TemplateName', models.CharField(blank=True, max_length=200, null=True)),
                ('Enabled', models.BooleanField(default=True, null=True)),
                ('OrderingRank', models.IntegerField(default=100)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchtemplates_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searchtemplates_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SectorId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sector_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sector_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sector',
                'db_table': 'Sector',
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SequenceId', models.IntegerField(primary_key=True, serialize=False)),
                ('Description', models.IntegerField()),
                ('TabelId', models.IntegerField()),
                ('TableName', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('TableFilter', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('CurrentValue', models.IntegerField()),
                ('IncrementValue', models.IntegerField()),
                ('MinimumValue', models.IntegerField()),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sequence_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sequence_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sequence',
                'verbose_name_plural': 'Sequence',
                'db_table': 'Sequence',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('ServerId', models.IntegerField(primary_key=True, serialize=False)),
                ('DNSName', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('IPAddress', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('MACAddress', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('ApplicationId1', models.ForeignKey(blank=True, db_column='ApplicationId1', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ApplicationId1', to='common.Application')),
                ('ApplicationId2', models.ForeignKey(blank=True, db_column='ApplicationId2', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ApplicationId2', to='common.Application')),
                ('ApplicationId3', models.ForeignKey(blank=True, db_column='ApplicationId3', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ApplicationId3', to='common.Application')),
                ('ApplicationId4', models.ForeignKey(blank=True, db_column='ApplicationId4', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ApplicationId4', to='common.Application')),
                ('ApplicationId5', models.ForeignKey(blank=True, db_column='ApplicationId5', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ApplicationId5', to='common.Application')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Server',
                'verbose_name_plural': 'Server',
                'db_table': 'Server',
            },
        ),
        migrations.CreateModel(
            name='SessionStatus',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SessionStatusId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessionstatus_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessionstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SessionStatus',
                'verbose_name_plural': 'SessionStatus',
                'db_table': 'SessionStatus',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('StaffId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staff',
                'db_table': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='SubstitutionThreat',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SubstitutionThreatId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='substitutionthreat_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='substitutionthreat_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SubstitutionThreat',
                'verbose_name_plural': 'SubstitutionThreat',
                'db_table': 'SubstitutionThreat',
            },
        ),
        migrations.CreateModel(
            name='Suffix',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SuffixId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suffix_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suffix_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Suffix',
                'verbose_name_plural': 'Suffix',
                'db_table': 'Suffix',
            },
        ),
        migrations.CreateModel(
            name='SupplierPower',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('SupplierPowerId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplierpower_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplierpower_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SupplierPower',
                'verbose_name_plural': 'SupplierPower',
                'db_table': 'SupplierPower',
            },
        ),
        migrations.CreateModel(
            name='TelephoneType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('TelephoneTypeId', models.IntegerField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='telephonetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='telephonetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TelephoneType',
                'verbose_name_plural': 'TelephoneType',
                'db_table': 'TelephoneType',
            },
        ),
        migrations.CreateModel(
            name='TemplateType',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('TemplateTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='templatetype_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='templatetype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TemplateType',
                'verbose_name_plural': 'TemplateType',
                'db_table': 'TemplateType',
            },
        ),
        migrations.CreateModel(
            name='WorkflowProcess',
            fields=[
                ('CheckerId', models.IntegerField(blank=True, default=None, null=True)),
                ('CheckDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('Description', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Description5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('IdHost', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('MakerId', models.IntegerField(blank=True, default=None, null=True)),
                ('MakeDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RecordStatus', models.IntegerField(blank=True, default=None, null=True)),
                ('InsertDate', models.DateTimeField(blank=True, null=True)),
                ('LastUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('WorkflowProcessId', models.AutoField(primary_key=True, serialize=False)),
                ('ProfileTypes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApplicationTypes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ApplicationPurposes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('ProductTypesApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('CollateralTypesApplicable', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflowprocess_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflowprocess_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'WorkflowProcess',
                'verbose_name_plural': 'WorkflowProcess',
                'db_table': 'WorkflowProcess',
            },
        ),
        migrations.CreateModel(
            name='BasePartyApplicationSummary',
            fields=[
                ('BasePartyId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='ApplicationSummary', serialize=False, to='common.BaseParty')),
                ('CurrentCreditApplicationId', models.IntegerField(blank=True, default=None, null=True)),
                ('CreditApplicationsTotal', models.IntegerField(blank=True, default=None, null=True)),
                ('CreditApplicationsApproved', models.IntegerField(blank=True, default=None, null=True)),
                ('CreditApplicationsDeclined', models.IntegerField(blank=True, default=None, null=True)),
                ('CreditApplicationsCancelled', models.IntegerField(blank=True, default=None, null=True)),
                ('CreditApplicationsInProcess', models.IntegerField(blank=True, default=None, null=True)),
                ('CumulativeExposureApproved', models.IntegerField(blank=True, default=None, null=True)),
                ('CumulativeExposureDeclined', models.IntegerField(blank=True, default=None, null=True)),
                ('CumulativeExposureInProcess', models.IntegerField(blank=True, default=None, null=True)),
                ('CurrentRatingApplicationId', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingApplicationsTotal', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingApplicationsApproved', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingApplicationsDeclined', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingApplicationsCancelled', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingApplicationsInProcess', models.IntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'BasePartyApplicationSummary',
                'verbose_name_plural': 'BasePartyApplicationSummary',
                'db_table': 'BasePartyApplicationSummary',
            },
        ),
        migrations.CreateModel(
            name='BasePartyBankingSummary',
            fields=[
                ('BasePartyId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='BankingSummary', serialize=False, to='common.BaseParty')),
                ('CommitmentTotal', models.FloatField(blank=True, default=None, null=True)),
                ('ExposureTotal', models.FloatField(blank=True, default=None, null=True)),
                ('ExposureProposed', models.FloatField(blank=True, default=None, null=True)),
                ('ExposureIncrease', models.FloatField(blank=True, default=None, null=True)),
                ('ExposureAtRisk', models.FloatField(blank=True, default=None, null=True)),
                ('CollateralValuebyMV', models.FloatField(blank=True, default=None, null=True)),
                ('CollateralValuebyFSV', models.FloatField(blank=True, default=None, null=True)),
                ('CollateralValuebyDV', models.FloatField(blank=True, default=None, null=True)),
                ('CoverageRatiobyMV', models.FloatField(blank=True, default=None, null=True)),
                ('CoverageRatiobyFSV', models.FloatField(blank=True, default=None, null=True)),
                ('CoverageRatiobyDV', models.FloatField(blank=True, default=None, null=True)),
                ('PastDueDays', models.IntegerField(blank=True, default=None, null=True)),
                ('PastDueTotal', models.FloatField(blank=True, default=None, null=True)),
                ('PastDueBucket1', models.FloatField(blank=True, default=None, null=True)),
                ('PastDueBucket2', models.FloatField(blank=True, default=None, null=True)),
                ('PastDueBucket3', models.FloatField(blank=True, default=None, null=True)),
                ('PastDueBucket4', models.FloatField(blank=True, default=None, null=True)),
                ('PastDueBucket5', models.FloatField(blank=True, default=None, null=True)),
                ('PastDueBucket6', models.FloatField(blank=True, default=None, null=True)),
                ('DepositsBalanceTotal', models.FloatField(blank=True, default=None, null=True)),
                ('DepositsOriginalTotal', models.FloatField(blank=True, default=None, null=True)),
                ('FacilitiesCount', models.IntegerField(blank=True, default=None, null=True)),
                ('FacilitiesPastDueCount', models.FloatField(blank=True, default=None, null=True)),
                ('CollateralsCount', models.IntegerField(blank=True, default=None, null=True)),
                ('DepositsCount', models.IntegerField(blank=True, default=None, null=True)),
                ('AssetClassification', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AssetClassification')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartybankingsummary_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartybankingsummary_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BasePartyBankingSummary',
                'verbose_name_plural': 'BasePartyBankingSummary',
                'db_table': 'BasePartyBankingSummary',
            },
        ),
        migrations.CreateModel(
            name='BasePartyIndividual',
            fields=[
                ('BasePartyId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='Individual', serialize=False, to='common.BaseParty')),
                ('FirstName', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('MiddleName', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('LastName', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('OtherNames', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('BirthDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('CountryNationality', models.IntegerField(blank=True, default=None, null=True)),
                ('CountryResidence', models.IntegerField(blank=True, default=None, null=True)),
                ('CurrentAddressId', models.IntegerField(blank=True, default=None, null=True)),
                ('DurationAtAddress', models.FloatField(blank=True, default=None, null=True)),
                ('PreviousAddressId', models.IntegerField(blank=True, default=None, null=True)),
                ('DependantsCount', models.IntegerField(blank=True, default=None, null=True)),
                ('EmployerCurrent', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('EmployerPrevious', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('EmploymentDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('RetirementAge', models.IntegerField(blank=True, default=None, null=True)),
                ('ContractTenure', models.IntegerField(blank=True, default=None, null=True)),
                ('ContractExpiryDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('EmployeeId', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('ExperienceSector', models.FloatField(blank=True, default=None, null=True)),
                ('Occupation', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('ExperienceOccupation', models.FloatField(blank=True, default=None, null=True)),
                ('EmployerTelephoneId', models.IntegerField(blank=True, default=None, null=True)),
                ('EmployerAddressId', models.IntegerField(blank=True, default=None, null=True)),
                ('IncomeGross', models.FloatField(blank=True, default=None, null=True)),
                ('IncomeOther', models.FloatField(blank=True, default=None, null=True)),
                ('IncomeTotal', models.FloatField(blank=True, default=None, null=True)),
                ('IncomeNet', models.FloatField(blank=True, default=None, null=True)),
                ('IncomeDisposable', models.FloatField(blank=True, default=None, null=True)),
                ('DeductionsStatutory', models.FloatField(blank=True, default=None, null=True)),
                ('DeductionsOther', models.FloatField(blank=True, default=None, null=True)),
                ('DeductionsTotal', models.FloatField(blank=True, default=None, null=True)),
                ('ExpensesLiving', models.FloatField(blank=True, default=None, null=True)),
                ('ExpensesOther', models.FloatField(blank=True, default=None, null=True)),
                ('ExpensesTotal', models.FloatField(blank=True, default=None, null=True)),
                ('Text1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text6', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text7', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text8', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text9', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text10', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Number1', models.FloatField(blank=True, default=None, null=True)),
                ('Number2', models.FloatField(blank=True, default=None, null=True)),
                ('Number3', models.FloatField(blank=True, default=None, null=True)),
                ('Number4', models.FloatField(blank=True, default=None, null=True)),
                ('Number5', models.FloatField(blank=True, default=None, null=True)),
                ('Number6', models.FloatField(blank=True, default=None, null=True)),
                ('Number7', models.FloatField(blank=True, default=None, null=True)),
                ('Number8', models.FloatField(blank=True, default=None, null=True)),
                ('Number9', models.FloatField(blank=True, default=None, null=True)),
                ('Number10', models.FloatField(blank=True, default=None, null=True)),
                ('Code1', models.IntegerField(blank=True, default=None, null=True)),
                ('Code2', models.IntegerField(blank=True, default=None, null=True)),
                ('Code3', models.IntegerField(blank=True, default=None, null=True)),
                ('Code4', models.IntegerField(blank=True, default=None, null=True)),
                ('Code5', models.IntegerField(blank=True, default=None, null=True)),
                ('Code6', models.IntegerField(blank=True, default=None, null=True)),
                ('Code7', models.IntegerField(blank=True, default=None, null=True)),
                ('Code8', models.IntegerField(blank=True, default=None, null=True)),
                ('Code9', models.IntegerField(blank=True, default=None, null=True)),
                ('Code10', models.IntegerField(blank=True, default=None, null=True)),
                ('Date1', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date2', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date3', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date4', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date5', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date6', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date7', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date8', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date9', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date10', models.DateTimeField(blank=True, default=None, null=True)),
                ('ConfirmationStatus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ConfirmationStatus')),
                ('EducationLevel', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.EducationLevel')),
                ('EmployerSector', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.EmployerSector')),
                ('EmployerType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.EmployerType')),
                ('EmploymentType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.EmploymentType')),
                ('InsertedBy', models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyindividual_inserted_by', to=settings.AUTH_USER_MODEL)),
                ('JobGrade', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.JobGrade')),
                ('LastUpdatedBy', models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyindividual_updated_by', to=settings.AUTH_USER_MODEL)),
                ('ManagementLevel', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ManagementLevel')),
                ('MaritalStatus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.MaritalStatus')),
                ('Prefix', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Prefix')),
                ('ResidentialStatus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ResidentialStatus')),
                ('SalaryFrequency', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.SalaryFrequency')),
                ('SalaryPayMode', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.SalaryPayMode')),
                ('Suffix', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Suffix')),
            ],
            options={
                'verbose_name': 'BasePartyIndividual',
                'verbose_name_plural': 'BasePartyIndividual',
                'db_table': 'BasePartyIndividual',
            },
        ),
        migrations.CreateModel(
            name='BasePartyNonIndividual',
            fields=[
                ('BasePartyId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='OtherInformation', serialize=False, to='common.BaseParty')),
                ('TradingAs', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('PeriodAtAddress', models.FloatField(blank=True, default=None, null=True)),
                ('RegistrationDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('OperationsStartDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('ShareCaptitalAuthorized', models.FloatField(blank=True, default=None, null=True)),
                ('ShareCapitalPaidUp', models.FloatField(blank=True, default=None, null=True)),
                ('ExperienceOfPromoters', models.FloatField(blank=True, default=None, null=True)),
                ('ExperienceOfManagement', models.FloatField(blank=True, default=None, null=True)),
                ('IsFamilyBusiness', models.IntegerField(blank=True, default=None, null=True)),
                ('IsGroupOwned', models.IntegerField(blank=True, default=None, null=True)),
                ('IsWomanOwned', models.IntegerField(blank=True, default=None, null=True)),
                ('IsYouthOwned', models.IntegerField(blank=True, default=None, null=True)),
                ('TenureOfPremises', models.IntegerField(blank=True, default=None, null=True)),
                ('EmployeeCountTotal', models.IntegerField(blank=True, default=None, null=True)),
                ('EmployeeCountPermanent', models.IntegerField(blank=True, default=None, null=True)),
                ('EmployeeCountTemporary', models.IntegerField(blank=True, default=None, null=True)),
                ('EmployeeCountManagement', models.IntegerField(blank=True, default=None, null=True)),
                ('KeyProductIncome', models.IntegerField(blank=True, default=None, null=True)),
                ('MarketShare', models.FloatField(blank=True, default=None, null=True)),
                ('Text1', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text2', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text3', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text4', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text5', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text6', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text7', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text8', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text9', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Text10', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('Number1', models.FloatField(blank=True, default=None, null=True)),
                ('Number2', models.FloatField(blank=True, default=None, null=True)),
                ('Number3', models.FloatField(blank=True, default=None, null=True)),
                ('Number4', models.FloatField(blank=True, default=None, null=True)),
                ('Number5', models.FloatField(blank=True, default=None, null=True)),
                ('Number6', models.FloatField(blank=True, default=None, null=True)),
                ('Number7', models.FloatField(blank=True, default=None, null=True)),
                ('Number8', models.FloatField(blank=True, default=None, null=True)),
                ('Number9', models.FloatField(blank=True, default=None, null=True)),
                ('Number10', models.FloatField(blank=True, default=None, null=True)),
                ('Code1', models.IntegerField(blank=True, default=None, null=True)),
                ('Code2', models.IntegerField(blank=True, default=None, null=True)),
                ('Code3', models.IntegerField(blank=True, default=None, null=True)),
                ('Code4', models.IntegerField(blank=True, default=None, null=True)),
                ('Code5', models.IntegerField(blank=True, default=None, null=True)),
                ('Code6', models.IntegerField(blank=True, default=None, null=True)),
                ('Code7', models.IntegerField(blank=True, default=None, null=True)),
                ('Code8', models.IntegerField(blank=True, default=None, null=True)),
                ('Code9', models.IntegerField(blank=True, default=None, null=True)),
                ('Code10', models.IntegerField(blank=True, default=None, null=True)),
                ('Date1', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date2', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date3', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date4', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date5', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date6', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date7', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date8', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date9', models.DateTimeField(blank=True, default=None, null=True)),
                ('Date10', models.DateTimeField(blank=True, default=None, null=True)),
                ('CountryOperation', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CountryOperation', to='common.Country')),
                ('CountryRegistration', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CountryRegistration', to='common.Country')),
                ('DecisionMakingType', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DecisionMakingType')),
                ('Governance', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.GovernanceType')),
            ],
            options={
                'verbose_name': 'BasePartyNonIndividual',
                'verbose_name_plural': 'BasePartyNonIndividual',
                'db_table': 'BasePartyNonIndividual',
            },
        ),
        migrations.CreateModel(
            name='BasePartyRatingSummary',
            fields=[
                ('BasePartyId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='RatingSummary', serialize=False, to='common.BaseParty')),
                ('RatingInternal1', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingInternalModel1', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingInternalDate1', models.DateTimeField(blank=True, default=None, null=True)),
                ('RatingInternal2', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingInternalModel2', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingInternalDate2', models.DateTimeField(blank=True, default=None, null=True)),
                ('RatingExternal1', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingExternalModel1', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingExternalDate1', models.DateTimeField(blank=True, default=None, null=True)),
                ('RatingExternal2', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingExternalModel2', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingExternalDate2', models.DateTimeField(blank=True, default=None, null=True)),
                ('RatingExternal3', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingExternalModel3', models.IntegerField(blank=True, default=None, null=True)),
                ('RatingExternalDate3', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'BasePartyRatingSummary',
                'verbose_name_plural': 'BasePartyRatingSummary',
                'db_table': 'BasePartyRatingSummary',
            },
        ),
        migrations.AddField(
            model_name='searchtemplateparams',
            name='TemplateId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.SearchTemplates'),
        ),
        migrations.AddField(
            model_name='searchgridconfig',
            name='TemplateId',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.SearchTemplates'),
        ),
        migrations.AddField(
            model_name='relatedstaff',
            name='BasePartyId',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='relatedstaff',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relatedstaff_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='relatedstaff',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relatedstaff_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='relatedstaff',
            name='RelationCategory',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationCategory'),
        ),
        migrations.AddField(
            model_name='relatedstaff',
            name='RelationType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationType'),
        ),
        migrations.AddField(
            model_name='relatedparty',
            name='BaseParty1Id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='BaseParty1', to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='relatedparty',
            name='BaseParty2Id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='BaseParty2', to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='relatedparty',
            name='GuaranteeType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.GuaranteeType'),
        ),
        migrations.AddField(
            model_name='relatedparty',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relatedparty_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='relatedparty',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relatedparty_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='relatedparty',
            name='RelationCategory',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationCategory'),
        ),
        migrations.AddField(
            model_name='relatedparty',
            name='RelationType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationType'),
        ),
        migrations.AddField(
            model_name='note',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='note',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='note_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='note',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='note_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='BuyerPower',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BuyerPower'),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='CompetitiveRivalry',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CompetitiveRivalry'),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='Industry',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Industry'),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='industryanalysis_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='industryanalysis_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='NewEntrantThreat',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.NewEntrantThreat'),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='SubstitutionThreat',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.SubstitutionThreat'),
        ),
        migrations.AddField(
            model_name='industryanalysis',
            name='SupplierPower',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.SupplierPower'),
        ),
        migrations.AddField(
            model_name='host',
            name='HostLoginMode',
            field=models.ForeignKey(blank=True, db_column='HostLoginMode', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='HostLoginMode', to='common.HostLoginMode'),
        ),
        migrations.AddField(
            model_name='host',
            name='HostType',
            field=models.ForeignKey(blank=True, db_column='HostType', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='HostType', to='common.HostType'),
        ),
        migrations.AddField(
            model_name='host',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='host_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='host',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='host_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityarchived',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='facilityarchived',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='facilityarchived',
            name='FacilityIdParent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FacilityArchived'),
        ),
        migrations.AddField(
            model_name='facilityarchived',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='facilityarchived',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facilityarchived_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityarchived',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facilityarchived_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityarchived',
            name='RequestType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RequestType'),
        ),
        migrations.AddField(
            model_name='facility',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='facility',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='facility',
            name='FacilityIdParent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Facility'),
        ),
        migrations.AddField(
            model_name='facility',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='facility',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facility_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facility_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='RequestType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RequestType'),
        ),
        migrations.AddField(
            model_name='documentstore',
            name='DocumentStoreType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentStoreType'),
        ),
        migrations.AddField(
            model_name='documentstore',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentstore_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentstore',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentstore_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentrelateditem',
            name='RelatedItemType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelatedItemType'),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='DocumentStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentStatus'),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='DocumentType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentType'),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentfile_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentfile_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='document',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='document',
            name='DocumentIdType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentIdType'),
        ),
        migrations.AddField(
            model_name='document',
            name='DocumentStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentStatus'),
        ),
        migrations.AddField(
            model_name='document',
            name='DocumentStore',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentStore'),
        ),
        migrations.AddField(
            model_name='document',
            name='DocumentStoreType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentStoreType'),
        ),
        migrations.AddField(
            model_name='document',
            name='DocumentType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DocumentType'),
        ),
        migrations.AddField(
            model_name='document',
            name='FirstUploadBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='FirstUploadBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='Frequency',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Frequency'),
        ),
        migrations.AddField(
            model_name='document',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='LastClearanceBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LastClearanceBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='LastVerifyBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LastVerifyBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='WarningDocumentStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WarningDocumentStatus', to='common.AlertDocumentStatus'),
        ),
        migrations.AddField(
            model_name='document',
            name='WarningEmailOption',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WarningEmailOption', to='common.AlertEmailOption'),
        ),
        migrations.AddField(
            model_name='document',
            name='WarningSeverity',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WarningSeverity', to='common.AlertSeverity'),
        ),
        migrations.AddField(
            model_name='document',
            name='WarningSource',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WarningSource', to='common.AlertSource'),
        ),
        migrations.AddField(
            model_name='document',
            name='WarningStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WarningStatus', to='common.AlertStatus'),
        ),
        migrations.AddField(
            model_name='document',
            name='WarningSubType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WarningSubType', to='common.AlertSubType'),
        ),
        migrations.AddField(
            model_name='document',
            name='WarningType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='WarningType', to='common.AlertType'),
        ),
        migrations.AddField(
            model_name='depositarchived',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='depositarchived',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='depositarchived',
            name='DepositIdParent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DepositArchived'),
        ),
        migrations.AddField(
            model_name='depositarchived',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='depositarchived',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='depositarchived_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='depositarchived',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='depositarchived_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='depositarchived',
            name='RequestType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RequestType'),
        ),
        migrations.AddField(
            model_name='deposit',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='deposit',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='deposit',
            name='DepositIdParent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Deposit'),
        ),
        migrations.AddField(
            model_name='deposit',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='deposit',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deposit_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='deposit',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deposit_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='deposit',
            name='RequestType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RequestType'),
        ),
        migrations.AddField(
            model_name='creditapplicationstaff',
            name='RelationCategory',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationCategory'),
        ),
        migrations.AddField(
            model_name='creditapplicationstaff',
            name='RelationType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationType'),
        ),
        migrations.AddField(
            model_name='creditapplicationstaff',
            name='StaffId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='BasePartyCreditApplication', to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='BusinessUnit',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BusinessUnit'),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='DecisionAuthorityLevel',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DecisionAuthorityLevel', to='common.AuthorityLevel'),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='DecisionType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DecisionType'),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='DeclineReason',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DeclineReason'),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='FinancialInstitution',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FinancialInstitution'),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='InsertedBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='LastReviewedBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LastReviewedBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LastUpdatedBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='LastWFLStepBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LastWFLStepBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='ReceivedBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ReceivedBy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='RequiredAuthorityLevel',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AuthorityLevel'),
        ),
        migrations.AddField(
            model_name='creditapplication',
            name='WorkflowProcess',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.WorkflowProcess'),
        ),
        migrations.AddField(
            model_name='coveragearchived',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='coveragearchived',
            name='FacilityId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Facility'),
        ),
        migrations.AddField(
            model_name='coveragearchived',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='coveragearchived',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coveragearchived_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coveragearchived',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coveragearchived_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coverage',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='coverage',
            name='FacilityId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Facility'),
        ),
        migrations.AddField(
            model_name='coverage',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='coverage',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coverage_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coverage',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coverage_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationdistribution',
            name='DistributionStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DistributionStatus'),
        ),
        migrations.AddField(
            model_name='communicationdistribution',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationdistribution_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationdistribution',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationdistribution_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationdistribution',
            name='RecipientType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RecipientType'),
        ),
        migrations.AddField(
            model_name='communicationattachment',
            name='FileType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FileType'),
        ),
        migrations.AddField(
            model_name='communicationattachment',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationattachment_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationattachment',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communicationattachment_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communication',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='communication',
            name='CommunicationQueue',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CommunicationQueue'),
        ),
        migrations.AddField(
            model_name='communication',
            name='CommunicationSource',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CommunicationSource'),
        ),
        migrations.AddField(
            model_name='communication',
            name='CommunicationStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CommunicationStatus'),
        ),
        migrations.AddField(
            model_name='communication',
            name='CommunicationType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CommunicationType'),
        ),
        migrations.AddField(
            model_name='communication',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communication',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communication',
            name='Priority',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Priority'),
        ),
        migrations.AddField(
            model_name='communication',
            name='ReadStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ReadStatus'),
        ),
        migrations.AddField(
            model_name='collateralarchived',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='collateralarchived',
            name='CollateralIdParent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CollateralArchived'),
        ),
        migrations.AddField(
            model_name='collateralarchived',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='collateralarchived',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='collateralarchived',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collateralarchived_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collateralarchived',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collateralarchived_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collateralarchived',
            name='RequestType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RequestType'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='CollateralIdParent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Collateral'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='collateral',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collateral_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collateral',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collateral_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collateral',
            name='RequestType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RequestType'),
        ),
        migrations.AddField(
            model_name='checklisttemplate',
            name='TemplateType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.TemplateType'),
        ),
        migrations.AddField(
            model_name='checklistresult',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='checklistresult',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='checklistresult',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistresult_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistresult',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistresult_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistresult',
            name='Status',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistStatus'),
        ),
        migrations.AddField(
            model_name='checklistresult',
            name='TemplateId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='checklistquestion',
            name='TemplateId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='checklistdocument',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='checklistdocument',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='checklistdocument',
            name='DocumentId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Document'),
        ),
        migrations.AddField(
            model_name='checklistdocument',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistdocument_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistdocument',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistdocument_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistdocument',
            name='QuestionId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistQuestion'),
        ),
        migrations.AddField(
            model_name='checklistdocument',
            name='TemplateId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='checklistcomment',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='checklistcomment',
            name='CommentIdRelated',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistComment'),
        ),
        migrations.AddField(
            model_name='checklistcomment',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='checklistcomment',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistcomment_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistcomment',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistcomment_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistcomment',
            name='QuestionId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistQuestion'),
        ),
        migrations.AddField(
            model_name='checklistcomment',
            name='TemplateId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='CreditApplicationId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CreditApplication'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistanswer_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checklistanswer_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='QuestionId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistQuestion'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response1By',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response1By', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response1Id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response1Id', to='common.ChecklistResponse'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response2By',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response2By', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response2Id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response2Id', to='common.ChecklistResponse'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response3By',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response3By', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response3Id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response3Id', to='common.ChecklistResponse'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response4By',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response4By', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='Response4Id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Response4Id', to='common.ChecklistResponse'),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='ResponseAutoBy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='checklistanswer',
            name='TemplateId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ChecklistTemplate'),
        ),
        migrations.AddField(
            model_name='businessunit',
            name='FinancialInstitution',
            field=models.ForeignKey(blank=True, db_column='FinancialInstitution', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FinancialInstitution'),
        ),
        migrations.AddField(
            model_name='businessunit',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='businessunit_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartytelephone',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='basepartytelephone',
            name='Country',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Country'),
        ),
        migrations.AddField(
            model_name='basepartytelephone',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartytelephone_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartytelephone',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartytelephone_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartytelephone',
            name='PreferenceType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.PreferenceType'),
        ),
        migrations.AddField(
            model_name='basepartytelephone',
            name='TelephoneType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.TelephoneType'),
        ),
        migrations.AddField(
            model_name='basepartyidentifier',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='basepartyidentifier',
            name='IdentifierCategory',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.IdentifierCategory'),
        ),
        migrations.AddField(
            model_name='basepartyidentifier',
            name='IdentifierType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.IdentifierType'),
        ),
        migrations.AddField(
            model_name='basepartyidentifier',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyidentifier_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartyidentifier',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyidentifier_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartyfinancialssummary',
            name='BasePartyId',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='FinancialsSummary', to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='basepartyfinancialssummary',
            name='FinancialModel',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FinancialModel'),
        ),
        migrations.AddField(
            model_name='basepartyfinancialssummary',
            name='FiscalYearEnd',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FiscalYearEnd'),
        ),
        migrations.AddField(
            model_name='basepartyemail',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='basepartyemail',
            name='EmailType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.EmailType'),
        ),
        migrations.AddField(
            model_name='basepartyemail',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyemail_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartyemail',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyemail_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartyemail',
            name='PreferenceType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.PreferenceType'),
        ),
        migrations.AddField(
            model_name='basepartyaddress',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='basepartyaddress',
            name='Country',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Country'),
        ),
        migrations.AddField(
            model_name='basepartyaddress',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyaddress_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartyaddress',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartyaddress_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartyaddress',
            name='PreferenceType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.PreferenceType'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='BasePartyType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BasePartyType'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='BusinessUnit',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BusinessUnit'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='CRMPortfolio',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CRMPortfolio'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='CRMStrategy',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.CRMStrategy'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='FinancialInstitution',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FinancialInstitution'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='baseparty_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='baseparty_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='PrimaryContactId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BasePartyAddress'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='PrimaryEmailId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BasePartyEmail'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='PrimaryTelephoneId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BasePartyTelephone'),
        ),
        migrations.AddField(
            model_name='baseparty',
            name='ProfileType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ProfileType'),
        ),
        migrations.AddField(
            model_name='arrangementparammatrix',
            name='ArrangementType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementType'),
        ),
        migrations.AddField(
            model_name='arrangementparammatrix',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementparammatrix_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='arrangementparammatrix',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementparammatrix_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='arrangementparammatrix',
            name='RequestType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RequestType'),
        ),
        migrations.AddField(
            model_name='arrangementparam',
            name='ArrangementParamCategory',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ArrangementParamCategory'),
        ),
        migrations.AddField(
            model_name='arrangementparam',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementparam_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='arrangementparam',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arrangementparam_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alertsubtype',
            name='AlertType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.AlertType'),
        ),
        migrations.AddField(
            model_name='alertsubtype',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertsubtype_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alertsubtype',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertsubtype_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountrelatedparty',
            name='IsPrimaryAccountOwner',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AccountRelatedPartyIsPrimaryAccountOwner', to='common.Flag'),
        ),
        migrations.AddField(
            model_name='accountrelatedparty',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accountrelatedparty_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountrelatedparty',
            name='RelatedPartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='accountrelatedparty',
            name='RelationCategory',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationCategory'),
        ),
        migrations.AddField(
            model_name='accountrelatedparty',
            name='RelationType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.RelationType'),
        ),
        migrations.AddField(
            model_name='account',
            name='AccountCategory',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AccountCategory'),
        ),
        migrations.AddField(
            model_name='account',
            name='AccountClass',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AccountClass'),
        ),
        migrations.AddField(
            model_name='account',
            name='AccountOfficer',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AccountOfficer'),
        ),
        migrations.AddField(
            model_name='account',
            name='AccountStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AccountStatus'),
        ),
        migrations.AddField(
            model_name='account',
            name='AccountType',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.AccountType'),
        ),
        migrations.AddField(
            model_name='account',
            name='BasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='account',
            name='BusinessUnit',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.BusinessUnit'),
        ),
        migrations.AddField(
            model_name='account',
            name='CollateralizableFlag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CollateralizableFlag', to='common.Flag'),
        ),
        migrations.AddField(
            model_name='account',
            name='Currency',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Currency'),
        ),
        migrations.AddField(
            model_name='account',
            name='FinancialInstitution',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.FinancialInstitution'),
        ),
        migrations.AddField(
            model_name='account',
            name='HostId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Host'),
        ),
        migrations.AddField(
            model_name='account',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='JointAccountFlag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='JointAccountFlag', to='common.Flag'),
        ),
        migrations.AddField(
            model_name='account',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='LienMarkedFlag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LienMarkedFlag', to='common.Flag'),
        ),
        migrations.AddField(
            model_name='account',
            name='LimitCurrency',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LimitCurrency', to='common.Currency'),
        ),
        migrations.AddField(
            model_name='account',
            name='LiquidationAccountFlag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LiquidationAccountFlag', to='common.Flag'),
        ),
        migrations.AddField(
            model_name='account',
            name='OverdraftAllowedFlag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='OverdraftAllowedFlag', to='common.Flag'),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='HeadBasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='HeadBasePartyId', to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='InsertedBy',
            field=models.ForeignKey(blank=True, db_column='InsertedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartynonindividual_inserted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='LastUpdatedBy',
            field=models.ForeignKey(blank=True, db_column='LastUpdatedBy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basepartynonindividual_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='OperationalStatus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.OperationalStatus'),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='ParentBasePartyId',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ParentBasePartyId', to='common.BaseParty'),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='PrimaryActivity',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.ActivityType'),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='PrimaryIndustry',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Industry'),
        ),
        migrations.AddField(
            model_name='basepartynonindividual',
            name='PrimarySector',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Sector'),
        ),
    ]
